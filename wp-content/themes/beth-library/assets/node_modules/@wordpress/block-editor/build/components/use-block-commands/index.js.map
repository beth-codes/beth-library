{"version":3,"names":["_i18n","require","_blocks","_data","_commands","_icons","_store","useTransformCommands","clientIds","useSelect","select","getSelectedBlockClientIds","blockEditorStore","selectedBlockClientIds","blocks","getBlocksByClientId","replaceBlocks","multiSelect","useDispatch","possibleBlockTransformations","canRemove","getBlockRootClientId","getBlockTransformItems","canRemoveBlocks","rootClientId","Array","isArray","isTemplate","length","isTemplatePart","selectForMultipleBlocks","insertedBlocks","clientId","onBlockTransform","name","newBlocks","switchToBlockType","hasPossibleBlockTransformations","isLoading","commands","map","transformation","title","icon","replace","label","sprintf","__","src","callback","close","exports","useActionsCommands","canInsertBlockType","canMoveBlocks","getBlockCount","getDefaultBlockName","getGroupingBlockName","blocksStore","removeBlocks","duplicateBlocks","insertAfterBlock","insertBeforeBlock","setBlockMovingClientId","setNavigationMode","selectBlock","onGroup","groupingBlockName","onUngroup","innerBlocks","canInsertDefaultBlock","canDuplicate","every","block","hasBlockSupport","canMove","ungroup","group","push","add","remove","copy","move","command","useBlockCommands","useCommandLoader","hook"],"sources":["@wordpress/block-editor/src/components/use-block-commands/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\thasBlockSupport,\n\tstore as blocksStore,\n\tswitchToBlockType,\n\tisTemplatePart,\n} from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCommandLoader } from '@wordpress/commands';\nimport {\n\tcopy,\n\tedit as remove,\n\tcreate as add,\n\tgroup,\n\tungroup,\n\tmoveTo as move,\n} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport const useTransformCommands = () => {\n\tconst { clientIds } = useSelect( ( select ) => {\n\t\tconst { getSelectedBlockClientIds } = select( blockEditorStore );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\n\t\treturn {\n\t\t\tclientIds: selectedBlockClientIds,\n\t\t};\n\t}, [] );\n\tconst blocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocksByClientId( clientIds ),\n\t\t[ clientIds ]\n\t);\n\tconst { replaceBlocks, multiSelect } = useDispatch( blockEditorStore );\n\tconst { possibleBlockTransformations, canRemove } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockTransformItems,\n\t\t\t\tcanRemoveBlocks,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst rootClientId = getBlockRootClientId(\n\t\t\t\tArray.isArray( clientIds ) ? clientIds[ 0 ] : clientIds\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tpossibleBlockTransformations: getBlockTransformItems(\n\t\t\t\t\tblocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds, rootClientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, blocks ]\n\t);\n\n\tconst isTemplate = blocks.length === 1 && isTemplatePart( blocks[ 0 ] );\n\n\tfunction selectForMultipleBlocks( insertedBlocks ) {\n\t\tif ( insertedBlocks.length > 1 ) {\n\t\t\tmultiSelect(\n\t\t\t\tinsertedBlocks[ 0 ].clientId,\n\t\t\t\tinsertedBlocks[ insertedBlocks.length - 1 ].clientId\n\t\t\t);\n\t\t}\n\t}\n\n\t// Simple block tranformation based on the `Block Transforms` API.\n\tfunction onBlockTransform( name ) {\n\t\tconst newBlocks = switchToBlockType( blocks, name );\n\t\treplaceBlocks( clientIds, newBlocks );\n\t\tselectForMultipleBlocks( newBlocks );\n\t}\n\n\t/**\n\t * The `isTemplate` check is a stopgap solution here.\n\t * Ideally, the Transforms API should handle this\n\t * by allowing to exclude blocks from wildcard transformations.\n\t */\n\tconst hasPossibleBlockTransformations =\n\t\t!! possibleBlockTransformations.length && canRemove && ! isTemplate;\n\n\tif (\n\t\t! clientIds ||\n\t\tclientIds.length < 1 ||\n\t\t! hasPossibleBlockTransformations\n\t) {\n\t\treturn { isLoading: false, commands: [] };\n\t}\n\n\tconst commands = possibleBlockTransformations.map( ( transformation ) => {\n\t\tconst { name, title, icon } = transformation;\n\t\treturn {\n\t\t\tname: 'core/block-editor/transform-to-' + name.replace( '/', '-' ),\n\t\t\t// translators: %s: block title/name.\n\t\t\tlabel: sprintf( __( 'Transform to %s' ), title ),\n\t\t\ticon: icon.src,\n\t\t\tcallback: ( { close } ) => {\n\t\t\t\tonBlockTransform( name );\n\t\t\t\tclose();\n\t\t\t},\n\t\t};\n\t} );\n\n\treturn { isLoading: false, commands };\n};\n\nconst useActionsCommands = () => {\n\tconst { clientIds } = useSelect( ( select ) => {\n\t\tconst { getSelectedBlockClientIds } = select( blockEditorStore );\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\n\t\treturn {\n\t\t\tclientIds: selectedBlockClientIds,\n\t\t};\n\t}, [] );\n\tconst {\n\t\tcanInsertBlockType,\n\t\tgetBlockRootClientId,\n\t\tgetBlocksByClientId,\n\t\tcanMoveBlocks,\n\t\tcanRemoveBlocks,\n\t\tgetBlockCount,\n\t} = useSelect( blockEditorStore );\n\tconst { getDefaultBlockName, getGroupingBlockName } =\n\t\tuseSelect( blocksStore );\n\n\tconst blocks = getBlocksByClientId( clientIds );\n\n\tconst {\n\t\tremoveBlocks,\n\t\treplaceBlocks,\n\t\tduplicateBlocks,\n\t\tinsertAfterBlock,\n\t\tinsertBeforeBlock,\n\t\tsetBlockMovingClientId,\n\t\tsetNavigationMode,\n\t\tselectBlock,\n\t} = useDispatch( blockEditorStore );\n\n\tconst onGroup = () => {\n\t\tif ( ! blocks.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst groupingBlockName = getGroupingBlockName();\n\n\t\t// Activate the `transform` on `core/group` which does the conversion.\n\t\tconst newBlocks = switchToBlockType( blocks, groupingBlockName );\n\n\t\tif ( ! newBlocks ) {\n\t\t\treturn;\n\t\t}\n\t\treplaceBlocks( clientIds, newBlocks );\n\t};\n\tconst onUngroup = () => {\n\t\tif ( ! blocks.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst innerBlocks = blocks[ 0 ].innerBlocks;\n\n\t\tif ( ! innerBlocks.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\treplaceBlocks( clientIds, innerBlocks );\n\t};\n\n\tif ( ! clientIds || clientIds.length < 1 ) {\n\t\treturn { isLoading: false, commands: [] };\n\t}\n\n\tconst rootClientId = getBlockRootClientId( clientIds[ 0 ] );\n\tconst canInsertDefaultBlock = canInsertBlockType(\n\t\tgetDefaultBlockName(),\n\t\trootClientId\n\t);\n\tconst canDuplicate = blocks.every( ( block ) => {\n\t\treturn (\n\t\t\t!! block &&\n\t\t\thasBlockSupport( block.name, 'multiple', true ) &&\n\t\t\tcanInsertBlockType( block.name, rootClientId )\n\t\t);\n\t} );\n\tconst canRemove = canRemoveBlocks( clientIds, rootClientId );\n\tconst canMove =\n\t\tcanMoveBlocks( clientIds, rootClientId ) &&\n\t\tgetBlockCount( rootClientId ) !== 1;\n\n\tconst commands = [\n\t\t{\n\t\t\tname: 'ungroup',\n\t\t\tlabel: __( 'Ungroup' ),\n\t\t\tcallback: onUngroup,\n\t\t\ticon: ungroup,\n\t\t},\n\t\t{\n\t\t\tname: 'Group',\n\t\t\tlabel: __( 'Group' ),\n\t\t\tcallback: onGroup,\n\t\t\ticon: group,\n\t\t},\n\t];\n\tif ( canInsertDefaultBlock ) {\n\t\tcommands.push(\n\t\t\t{\n\t\t\t\tname: 'add-after',\n\t\t\t\tlabel: __( 'Add after' ),\n\t\t\t\tcallback: () => {\n\t\t\t\t\tconst clientId = Array.isArray( clientIds )\n\t\t\t\t\t\t? clientIds[ clientIds.length - 1 ]\n\t\t\t\t\t\t: clientId;\n\t\t\t\t\tinsertAfterBlock( clientId );\n\t\t\t\t},\n\t\t\t\ticon: add,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'add-before',\n\t\t\t\tlabel: __( 'Add before' ),\n\t\t\t\tcallback: () => {\n\t\t\t\t\tconst clientId = Array.isArray( clientIds )\n\t\t\t\t\t\t? clientIds[ 0 ]\n\t\t\t\t\t\t: clientId;\n\t\t\t\t\tinsertBeforeBlock( clientId );\n\t\t\t\t},\n\t\t\t\ticon: add,\n\t\t\t}\n\t\t);\n\t}\n\tif ( canRemove ) {\n\t\tcommands.push( {\n\t\t\tname: 'remove',\n\t\t\tlabel: __( 'Remove' ),\n\t\t\tcallback: () => removeBlocks( clientIds, true ),\n\t\t\ticon: remove,\n\t\t} );\n\t}\n\tif ( canDuplicate ) {\n\t\tcommands.push( {\n\t\t\tname: 'duplicate',\n\t\t\tlabel: __( 'Duplicate' ),\n\t\t\tcallback: () => duplicateBlocks( clientIds, true ),\n\t\t\ticon: copy,\n\t\t} );\n\t}\n\tif ( canMove ) {\n\t\tcommands.push( {\n\t\t\tname: 'move-to',\n\t\t\tlabel: __( 'Move to' ),\n\t\t\tcallback: () => {\n\t\t\t\tsetNavigationMode( true );\n\t\t\t\tselectBlock( clientIds[ 0 ] );\n\t\t\t\tsetBlockMovingClientId( clientIds[ 0 ] );\n\t\t\t},\n\t\t\ticon: move,\n\t\t} );\n\t}\n\n\treturn {\n\t\tisLoading: false,\n\t\tcommands: commands.map( ( command ) => ( {\n\t\t\t...command,\n\t\t\tname: 'core/block-editor/action-' + command.name,\n\t\t\tcallback: ( { close } ) => {\n\t\t\t\tcommand.callback();\n\t\t\t\tclose();\n\t\t\t},\n\t\t} ) ),\n\t};\n};\n\nexport const useBlockCommands = () => {\n\tuseCommandLoader( {\n\t\tname: 'core/block-editor/blockTransforms',\n\t\thook: useTransformCommands,\n\t} );\n\tuseCommandLoader( {\n\t\tname: 'core/block-editor/blockActions',\n\t\thook: useActionsCommands,\n\t} );\n};\n"],"mappings":"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"}
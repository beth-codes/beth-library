{"version":3,"names":["__EXPERIMENTAL_STYLE_PROPERTY","STYLE_PROPERTY","__EXPERIMENTAL_ELEMENTS","ELEMENTS","getBlockSupport","getBlockTypes","store","blocksStore","useSelect","renderToString","useContext","useMemo","getCSSRules","PRESET_METADATA","ROOT_BLOCK_SELECTOR","scopeSelector","getBlockCSSSelector","getTypographyFontSizeValue","getFluidTypographyOptionsFromSettings","GlobalStylesContext","useGlobalSetting","PresetDuotoneFilter","getGapCSSValue","blockEditorStore","LAYOUT_DEFINITIONS","getValueFromObjectPath","kebabCase","setImmutably","BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS","__experimentalBorder","color","spacing","typography","compileStyleValue","uncompiledValue","VARIABLE_REFERENCE_PREFIX","VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE","VARIABLE_PATH_SEPARATOR_TOKEN_STYLE","startsWith","variable","slice","length","split","join","getPresetsDeclarations","blockPresets","mergedSettings","reduce","declarations","path","valueKey","valueFunc","cssVarInfix","presetByOrigin","forEach","origin","value","push","slug","getPresetsClasses","blockSelector","classes","classSuffix","propertyName","classSelectorToUse","selectorToUse","map","selector","getPresetsSvgFilters","filter","metadata","at","flatMap","preset","createElement","key","flattenTree","input","prefix","token","result","Object","keys","newKey","replace","newLeaf","newPrefix","concatFeatureVariationSelectorString","featureSelector","styleVariationSelector","featureSelectors","combinedSelectors","trim","getFeatureDeclarations","selectors","styles","entries","feature","isShorthand","subfeature","subfeatureSelector","subfeatureStyles","newDeclarations","getStylesDeclarations","root","featureStyles","blockStyles","useRootPaddingAlign","tree","isRoot","output","properties","useEngine","rootOnly","pathToValue","styleValue","entry","name","prop","cssProperty","extraRules","rule","ruleValue","ref","refPath","size","settings","getLayoutStyles","layoutDefinitions","style","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","ruleset","gapValue","blockGap","values","className","spacingStyles","spacingStyle","rules","cssValue","combinedSelector","validDisplayModes","displayMode","baseStyles","includes","baseStyle","STYLE_KEYS","pickStyleKeys","treeToPickFrom","pickedEntries","clonedEntries","JSON","parse","stringify","fromEntries","getNodesWithStyles","blockSelectors","_tree$styles$blocks","nodes","elements","blocks","blockName","node","_node$elements","variations","variation","duotoneSelector","hasLayoutSupport","styleVariationSelectors","elementName","sel","elementSelectors","elementSelector","getNodesWithSettings","_tree$settings$blocks","pickPresets","presets","custom","blockCustom","toCustomProperties","customProps","toStyles","disableLayoutStyles","nodesWithStyles","nodesWithSettings","useRootPaddingAwareAlignments","contentSize","wideSize","layout","featureDeclarations","cssSelector","styleVariationName","styleVariations","baseSelector","styleVariationDeclarations","duotoneStyles","duotoneDeclarations","pseudoSelectorStyles","pseudoKey","pseudoStyle","pseudoDeclarations","_selector","pseudoRule","toSvgFilters","getSelectorsConfig","blockType","rootSelector","config","featureKey","featureName","getBlockSelectors","blockTypes","getBlockStyles","duotoneSupport","supports","__experimentalLayout","__experimentalDefault","blockStyleVariations","undefined","updateConfigWithSeparator","needsSeparatorStyleUpdate","background","text","border","processCSSNesting","css","processedCSS","parts","part","useGlobalStylesOutputWithConfig","mergedConfig","select","getSettings","_mergedConfig$styles$","customProperties","globalStyles","svgs","isGlobalStyles","assets","__unstableType","useGlobalStylesOutput","merged"],"sources":["@wordpress/block-editor/src/components/global-styles/use-global-styles-output.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY,\n\t__EXPERIMENTAL_ELEMENTS as ELEMENTS,\n\tgetBlockSupport,\n\tgetBlockTypes,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { renderToString, useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules } from '@wordpress/style-engine';\n\n/**\n * Internal dependencies\n */\nimport { PRESET_METADATA, ROOT_BLOCK_SELECTOR, scopeSelector } from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport {\n\tgetTypographyFontSizeValue,\n\tgetFluidTypographyOptionsFromSettings,\n} from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { PresetDuotoneFilter } from '../duotone/components';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { store as blockEditorStore } from '../../store';\nimport { LAYOUT_DEFINITIONS } from '../../layouts/definitions';\nimport {\n\tgetValueFromObjectPath,\n\tkebabCase,\n\tsetImmutably,\n} from '../../utils/object';\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n\t__experimentalBorder: 'border',\n\tcolor: 'color',\n\tspacing: 'spacing',\n\ttypography: 'typography',\n};\n\nfunction compileStyleValue( uncompiledValue ) {\n\tconst VARIABLE_REFERENCE_PREFIX = 'var:';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\n\tconst VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n\n\tif ( uncompiledValue?.startsWith?.( VARIABLE_REFERENCE_PREFIX ) ) {\n\t\tconst variable = uncompiledValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn uncompiledValue;\n}\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations( blockPresets = {}, mergedSettings ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, valueKey, valueFunc, cssVarInfix } ) => {\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( value ) => {\n\t\t\t\t\t\tif ( valueKey && ! valueFunc ) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ value[ valueKey ] }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tvalueFunc &&\n\t\t\t\t\t\t\ttypeof valueFunc === 'function'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t`--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\t\tvalue.slug\n\t\t\t\t\t\t\t\t) }: ${ valueFunc( value, mergedSettings ) }`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses( blockSelector = '*', blockPresets = {} ) {\n\treturn PRESET_METADATA.reduce(\n\t\t( declarations, { path, cssVarInfix, classes } ) => {\n\t\t\tif ( ! classes ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\t\tblockPresets,\n\t\t\t\tpath,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t[ 'default', 'theme', 'custom' ].forEach( ( origin ) => {\n\t\t\t\tif ( presetByOrigin[ origin ] ) {\n\t\t\t\t\tpresetByOrigin[ origin ].forEach( ( { slug } ) => {\n\t\t\t\t\t\tclasses.forEach( ( { classSuffix, propertyName } ) => {\n\t\t\t\t\t\t\tconst classSelectorToUse = `.has-${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) }-${ classSuffix }`;\n\t\t\t\t\t\t\tconst selectorToUse = blockSelector\n\t\t\t\t\t\t\t\t.split( ',' ) // Selector can be \"h1, h2, h3\"\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t( selector ) =>\n\t\t\t\t\t\t\t\t\t\t`${ selector }${ classSelectorToUse }`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join( ',' );\n\t\t\t\t\t\t\tconst value = `var(--wp--preset--${ cssVarInfix }--${ kebabCase(\n\t\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\t) })`;\n\t\t\t\t\t\t\tdeclarations += `${ selectorToUse }{${ propertyName }: ${ value } !important;}`;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn declarations;\n\t\t},\n\t\t''\n\t);\n}\n\nfunction getPresetsSvgFilters( blockPresets = {} ) {\n\treturn PRESET_METADATA.filter(\n\t\t// Duotone are the only type of filters for now.\n\t\t( metadata ) => metadata.path.at( -1 ) === 'duotone'\n\t).flatMap( ( metadata ) => {\n\t\tconst presetByOrigin = getValueFromObjectPath(\n\t\t\tblockPresets,\n\t\t\tmetadata.path,\n\t\t\t{}\n\t\t);\n\t\treturn [ 'default', 'theme' ]\n\t\t\t.filter( ( origin ) => presetByOrigin[ origin ] )\n\t\t\t.flatMap( ( origin ) =>\n\t\t\t\tpresetByOrigin[ origin ].map( ( preset ) =>\n\t\t\t\t\trenderToString(\n\t\t\t\t\t\t<PresetDuotoneFilter\n\t\t\t\t\t\t\tpreset={ preset }\n\t\t\t\t\t\t\tkey={ preset.slug }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join( '' );\n\t} );\n}\n\nfunction flattenTree( input = {}, prefix, token ) {\n\tlet result = [];\n\tObject.keys( input ).forEach( ( key ) => {\n\t\tconst newKey = prefix + kebabCase( key.replace( '/', '-' ) );\n\t\tconst newLeaf = input[ key ];\n\n\t\tif ( newLeaf instanceof Object ) {\n\t\t\tconst newPrefix = newKey + token;\n\t\t\tresult = [ ...result, ...flattenTree( newLeaf, newPrefix, token ) ];\n\t\t} else {\n\t\t\tresult.push( `${ newKey }: ${ newLeaf }` );\n\t\t}\n\t} );\n\treturn result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n */\nfunction concatFeatureVariationSelectorString(\n\tfeatureSelector,\n\tstyleVariationSelector\n) {\n\tconst featureSelectors = featureSelector.split( ',' );\n\tconst combinedSelectors = [];\n\tfeatureSelectors.forEach( ( selector ) => {\n\t\tcombinedSelectors.push(\n\t\t\t`${ styleVariationSelector.trim() }${ selector.trim() }`\n\t\t);\n\t} );\n\treturn combinedSelectors.join( ', ' );\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = ( selectors, styles ) => {\n\tconst declarations = {};\n\n\tObject.entries( selectors ).forEach( ( [ feature, selector ] ) => {\n\t\t// We're only processing features/subfeatures that have styles.\n\t\tif ( feature === 'root' || ! styles?.[ feature ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isShorthand = typeof selector === 'string';\n\n\t\t// If we have a selector object instead of shorthand process it.\n\t\tif ( ! isShorthand ) {\n\t\t\tObject.entries( selector ).forEach(\n\t\t\t\t( [ subfeature, subfeatureSelector ] ) => {\n\t\t\t\t\t// Don't process root feature selector yet or any\n\t\t\t\t\t// subfeature that doesn't have a style.\n\t\t\t\t\tif (\n\t\t\t\t\t\tsubfeature === 'root' ||\n\t\t\t\t\t\t! styles?.[ feature ][ subfeature ]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a temporary styles object and build\n\t\t\t\t\t// declarations for subfeature.\n\t\t\t\t\tconst subfeatureStyles = {\n\t\t\t\t\t\t[ feature ]: {\n\t\t\t\t\t\t\t[ subfeature ]: styles[ feature ][ subfeature ],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst newDeclarations =\n\t\t\t\t\t\tgetStylesDeclarations( subfeatureStyles );\n\n\t\t\t\t\t// Merge new declarations in with any others that\n\t\t\t\t\t// share the same selector.\n\t\t\t\t\tdeclarations[ subfeatureSelector ] = [\n\t\t\t\t\t\t...( declarations[ subfeatureSelector ] || [] ),\n\t\t\t\t\t\t...newDeclarations,\n\t\t\t\t\t];\n\n\t\t\t\t\t// Remove the subfeature's style now it will be\n\t\t\t\t\t// included under its own selector not the block's.\n\t\t\t\t\tdelete styles[ feature ][ subfeature ];\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Now subfeatures have been processed and removed, we can\n\t\t// process root, or shorthand, feature selectors.\n\t\tif ( isShorthand || selector.root ) {\n\t\t\tconst featureSelector = isShorthand ? selector : selector.root;\n\n\t\t\t// Create temporary style object and build declarations for feature.\n\t\t\tconst featureStyles = { [ feature ]: styles[ feature ] };\n\t\t\tconst newDeclarations = getStylesDeclarations( featureStyles );\n\n\t\t\t// Merge new declarations with any others that share the selector.\n\t\t\tdeclarations[ featureSelector ] = [\n\t\t\t\t...( declarations[ featureSelector ] || [] ),\n\t\t\t\t...newDeclarations,\n\t\t\t];\n\n\t\t\t// Remove the feature from the block's styles now as it will be\n\t\t\t// included under its own selector not the block's.\n\t\t\tdelete styles[ feature ];\n\t\t}\n\t} );\n\n\treturn declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(\n\tblockStyles = {},\n\tselector = '',\n\tuseRootPaddingAlign,\n\ttree = {}\n) {\n\tconst isRoot = ROOT_BLOCK_SELECTOR === selector;\n\tconst output = Object.entries( STYLE_PROPERTY ).reduce(\n\t\t(\n\t\t\tdeclarations,\n\t\t\t[ key, { value, properties, useEngine, rootOnly } ]\n\t\t) => {\n\t\t\tif ( rootOnly && ! isRoot ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t\tconst pathToValue = value;\n\t\t\tif ( pathToValue[ 0 ] === 'elements' || useEngine ) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tconst styleValue = getValueFromObjectPath(\n\t\t\t\tblockStyles,\n\t\t\t\tpathToValue\n\t\t\t);\n\n\t\t\t// Root-level padding styles don't currently support strings with CSS shorthand values.\n\t\t\t// This may change: https://github.com/WordPress/gutenberg/issues/40132.\n\t\t\tif (\n\t\t\t\tkey === '--wp--style--root--padding' &&\n\t\t\t\t( typeof styleValue === 'string' || ! useRootPaddingAlign )\n\t\t\t) {\n\t\t\t\treturn declarations;\n\t\t\t}\n\n\t\t\tif ( properties && typeof styleValue !== 'string' ) {\n\t\t\t\tObject.entries( properties ).forEach( ( entry ) => {\n\t\t\t\t\tconst [ name, prop ] = entry;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t! getValueFromObjectPath( styleValue, [ prop ], false )\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Do not create a declaration\n\t\t\t\t\t\t// for sub-properties that don't have any value.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cssProperty = name.startsWith( '--' )\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: kebabCase( name );\n\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\t\tgetValueFromObjectPath( styleValue, [ prop ] )\n\t\t\t\t\t\t) }`\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else if (\n\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue, false )\n\t\t\t) {\n\t\t\t\tconst cssProperty = key.startsWith( '--' )\n\t\t\t\t\t? key\n\t\t\t\t\t: kebabCase( key );\n\t\t\t\tdeclarations.push(\n\t\t\t\t\t`${ cssProperty }: ${ compileStyleValue(\n\t\t\t\t\t\tgetValueFromObjectPath( blockStyles, pathToValue )\n\t\t\t\t\t) }`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn declarations;\n\t\t},\n\t\t[]\n\t);\n\n\t// The goal is to move everything to server side generated engine styles\n\t// This is temporary as we absorb more and more styles into the engine.\n\tconst extraRules = getCSSRules( blockStyles );\n\textraRules.forEach( ( rule ) => {\n\t\t// Don't output padding properties if padding variables are set.\n\t\tif (\n\t\t\tisRoot &&\n\t\t\tuseRootPaddingAlign &&\n\t\t\trule.key.startsWith( 'padding' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssProperty = rule.key.startsWith( '--' )\n\t\t\t? rule.key\n\t\t\t: kebabCase( rule.key );\n\n\t\tlet ruleValue = rule.value;\n\t\tif ( typeof ruleValue !== 'string' && ruleValue?.ref ) {\n\t\t\tconst refPath = ruleValue.ref.split( '.' );\n\t\t\truleValue = getValueFromObjectPath( tree, refPath );\n\t\t\t// Presence of another ref indicates a reference to another dynamic value.\n\t\t\t// Pointing to another dynamic value is not supported.\n\t\t\tif ( ! ruleValue || ruleValue?.ref ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate fluid typography rules where available.\n\t\tif ( cssProperty === 'font-size' ) {\n\t\t\t/*\n\t\t\t * getTypographyFontSizeValue() will check\n\t\t\t * if fluid typography has been activated and also\n\t\t\t * whether the incoming value can be converted to a fluid value.\n\t\t\t * Values that already have a \"clamp()\" function will not pass the test,\n\t\t\t * and therefore the original $value will be returned.\n\t\t\t */\n\t\t\truleValue = getTypographyFontSizeValue(\n\t\t\t\t{ size: ruleValue },\n\t\t\t\tgetFluidTypographyOptionsFromSettings( tree?.settings )\n\t\t\t);\n\t\t}\n\n\t\toutput.push( `${ cssProperty }: ${ ruleValue }` );\n\t} );\n\n\treturn output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.layoutDefinitions     Layout definitions, keyed by layout type.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles( {\n\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\tstyle,\n\tselector,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tfallbackGapValue,\n} ) {\n\tlet ruleset = '';\n\tlet gapValue = hasBlockGapSupport\n\t\t? getGapCSSValue( style?.spacing?.blockGap )\n\t\t: '';\n\n\t// Ensure a fallback gap value for the root layout definitions,\n\t// and use a fallback value if one is provided for the current block.\n\tif ( hasFallbackGapSupport ) {\n\t\tif ( selector === ROOT_BLOCK_SELECTOR ) {\n\t\t\tgapValue = ! gapValue ? '0.5em' : gapValue;\n\t\t} else if ( ! hasBlockGapSupport && fallbackGapValue ) {\n\t\t\tgapValue = fallbackGapValue;\n\t\t}\n\t}\n\n\tif ( gapValue && layoutDefinitions ) {\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, name, spacingStyles } ) => {\n\t\t\t\t// Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n\t\t\t\tif (\n\t\t\t\t\t! hasBlockGapSupport &&\n\t\t\t\t\t'flex' !== name &&\n\t\t\t\t\t'grid' !== name\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( spacingStyles?.length ) {\n\t\t\t\t\tspacingStyles.forEach( ( spacingStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( spacingStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( spacingStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${\n\t\t\t\t\t\t\t\t\t\t\tcssValue ? cssValue : gapValue\n\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tlet combinedSelector = '';\n\n\t\t\t\t\t\t\tif ( ! hasBlockGapSupport ) {\n\t\t\t\t\t\t\t\t// For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`\n\t\t\t\t\t\t\t\t\t\t: `:where(${ selector }.${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  })`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcombinedSelector =\n\t\t\t\t\t\t\t\t\tselector === ROOT_BLOCK_SELECTOR\n\t\t\t\t\t\t\t\t\t\t? `:where(${ selector } .${ className })${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t: `${ selector }-${ className }${\n\t\t\t\t\t\t\t\t\t\t\t\tspacingStyle?.selector || ''\n\t\t\t\t\t\t\t\t\t\t  }`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n\t\tif ( selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport ) {\n\t\t\truleset += `${ selector } { --wp--style--block-gap: ${ gapValue }; }`;\n\t\t}\n\t}\n\n\t// Output base styles\n\tif ( selector === ROOT_BLOCK_SELECTOR && layoutDefinitions ) {\n\t\tconst validDisplayModes = [ 'block', 'flex', 'grid' ];\n\t\tObject.values( layoutDefinitions ).forEach(\n\t\t\t( { className, displayMode, baseStyles } ) => {\n\t\t\t\tif (\n\t\t\t\t\tdisplayMode &&\n\t\t\t\t\tvalidDisplayModes.includes( displayMode )\n\t\t\t\t) {\n\t\t\t\t\truleset += `${ selector } .${ className } { display:${ displayMode }; }`;\n\t\t\t\t}\n\n\t\t\t\tif ( baseStyles?.length ) {\n\t\t\t\t\tbaseStyles.forEach( ( baseStyle ) => {\n\t\t\t\t\t\tconst declarations = [];\n\n\t\t\t\t\t\tif ( baseStyle.rules ) {\n\t\t\t\t\t\t\tObject.entries( baseStyle.rules ).forEach(\n\t\t\t\t\t\t\t\t( [ cssProperty, cssValue ] ) => {\n\t\t\t\t\t\t\t\t\tdeclarations.push(\n\t\t\t\t\t\t\t\t\t\t`${ cssProperty }: ${ cssValue }`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst combinedSelector = `${ selector } .${ className }${\n\t\t\t\t\t\t\t\tbaseStyle?.selector || ''\n\t\t\t\t\t\t\t}`;\n\t\t\t\t\t\t\truleset += `${ combinedSelector } { ${ declarations.join(\n\t\t\t\t\t\t\t\t'; '\n\t\t\t\t\t\t\t) }; }`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\treturn ruleset;\n}\n\nconst STYLE_KEYS = [\n\t'border',\n\t'color',\n\t'dimensions',\n\t'spacing',\n\t'typography',\n\t'filter',\n\t'outline',\n\t'shadow',\n];\n\nfunction pickStyleKeys( treeToPickFrom ) {\n\tif ( ! treeToPickFrom ) {\n\t\treturn {};\n\t}\n\tconst entries = Object.entries( treeToPickFrom );\n\tconst pickedEntries = entries.filter( ( [ key ] ) =>\n\t\tSTYLE_KEYS.includes( key )\n\t);\n\t// clone the style objects so that `getFeatureDeclarations` can remove consumed keys from it\n\tconst clonedEntries = pickedEntries.map( ( [ key, style ] ) => [\n\t\tkey,\n\t\tJSON.parse( JSON.stringify( style ) ),\n\t] );\n\treturn Object.fromEntries( clonedEntries );\n}\n\nexport const getNodesWithStyles = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.styles ) {\n\t\treturn nodes;\n\t}\n\n\t// Top-level.\n\tconst styles = pickStyleKeys( tree.styles );\n\tif ( styles ) {\n\t\tnodes.push( {\n\t\t\tstyles,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\tObject.entries( ELEMENTS ).forEach( ( [ name, selector ] ) => {\n\t\tif ( tree.styles?.elements?.[ name ] ) {\n\t\t\tnodes.push( {\n\t\t\t\tstyles: tree.styles?.elements?.[ name ],\n\t\t\t\tselector,\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Iterate over blocks: they can have styles & elements.\n\tObject.entries( tree.styles?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockStyles = pickStyleKeys( node );\n\n\t\t\tif ( node?.variations ) {\n\t\t\t\tconst variations = {};\n\t\t\t\tObject.keys( node.variations ).forEach( ( variation ) => {\n\t\t\t\t\tvariations[ variation ] = pickStyleKeys(\n\t\t\t\t\t\tnode.variations[ variation ]\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t\tblockStyles.variations = variations;\n\t\t\t}\n\t\t\tif ( blockStyles && blockSelectors?.[ blockName ]?.selector ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tduotoneSelector:\n\t\t\t\t\t\tblockSelectors[ blockName ].duotoneSelector,\n\t\t\t\t\tfallbackGapValue:\n\t\t\t\t\t\tblockSelectors[ blockName ].fallbackGapValue,\n\t\t\t\t\thasLayoutSupport:\n\t\t\t\t\t\tblockSelectors[ blockName ].hasLayoutSupport,\n\t\t\t\t\tselector: blockSelectors[ blockName ].selector,\n\t\t\t\t\tstyles: blockStyles,\n\t\t\t\t\tfeatureSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].featureSelectors,\n\t\t\t\t\tstyleVariationSelectors:\n\t\t\t\t\t\tblockSelectors[ blockName ].styleVariationSelectors,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tObject.entries( node?.elements ?? {} ).forEach(\n\t\t\t\t( [ elementName, value ] ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\tblockSelectors?.[ blockName ] &&\n\t\t\t\t\t\tELEMENTS[ elementName ]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes.push( {\n\t\t\t\t\t\t\tstyles: value,\n\t\t\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector\n\t\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t\t.map( ( sel ) => {\n\t\t\t\t\t\t\t\t\tconst elementSelectors =\n\t\t\t\t\t\t\t\t\t\tELEMENTS[ elementName ].split( ',' );\n\t\t\t\t\t\t\t\t\treturn elementSelectors.map(\n\t\t\t\t\t\t\t\t\t\t( elementSelector ) =>\n\t\t\t\t\t\t\t\t\t\t\tsel + ' ' + elementSelector\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.join( ',' ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const getNodesWithSettings = ( tree, blockSelectors ) => {\n\tconst nodes = [];\n\n\tif ( ! tree?.settings ) {\n\t\treturn nodes;\n\t}\n\n\tconst pickPresets = ( treeToPickFrom ) => {\n\t\tlet presets = {};\n\t\tPRESET_METADATA.forEach( ( { path } ) => {\n\t\t\tconst value = getValueFromObjectPath( treeToPickFrom, path, false );\n\t\t\tif ( value !== false ) {\n\t\t\t\tpresets = setImmutably( presets, path, value );\n\t\t\t}\n\t\t} );\n\t\treturn presets;\n\t};\n\n\t// Top-level.\n\tconst presets = pickPresets( tree.settings );\n\tconst custom = tree.settings?.custom;\n\tif ( Object.keys( presets ).length > 0 || custom ) {\n\t\tnodes.push( {\n\t\t\tpresets,\n\t\t\tcustom,\n\t\t\tselector: ROOT_BLOCK_SELECTOR,\n\t\t} );\n\t}\n\n\t// Blocks.\n\tObject.entries( tree.settings?.blocks ?? {} ).forEach(\n\t\t( [ blockName, node ] ) => {\n\t\t\tconst blockPresets = pickPresets( node );\n\t\t\tconst blockCustom = node.custom;\n\t\t\tif ( Object.keys( blockPresets ).length > 0 || blockCustom ) {\n\t\t\t\tnodes.push( {\n\t\t\t\t\tpresets: blockPresets,\n\t\t\t\t\tcustom: blockCustom,\n\t\t\t\t\tselector: blockSelectors[ blockName ]?.selector,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t);\n\n\treturn nodes;\n};\n\nexport const toCustomProperties = ( tree, blockSelectors ) => {\n\tconst settings = getNodesWithSettings( tree, blockSelectors );\n\tlet ruleset = '';\n\tsettings.forEach( ( { presets, custom, selector } ) => {\n\t\tconst declarations = getPresetsDeclarations( presets, tree?.settings );\n\t\tconst customProps = flattenTree( custom, '--wp--custom--', '--' );\n\t\tif ( customProps.length > 0 ) {\n\t\t\tdeclarations.push( ...customProps );\n\t\t}\n\n\t\tif ( declarations.length > 0 ) {\n\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport const toStyles = (\n\ttree,\n\tblockSelectors,\n\thasBlockGapSupport,\n\thasFallbackGapSupport,\n\tdisableLayoutStyles = false\n) => {\n\tconst nodesWithStyles = getNodesWithStyles( tree, blockSelectors );\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\tconst useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n\tconst { contentSize, wideSize } = tree?.settings?.layout || {};\n\n\t/*\n\t * Reset default browser margin on the root body element.\n\t * This is set on the root selector **before** generating the ruleset\n\t * from the `theme.json`. This is to ensure that if the `theme.json` declares\n\t * `margin` in its `spacing` declaration for the `body` element then these\n\t * user-generated values take precedence in the CSS cascade.\n\t * @link https://github.com/WordPress/gutenberg/issues/36147.\n\t */\n\tlet ruleset = 'body {margin: 0;';\n\n\tif ( contentSize ) {\n\t\truleset += ` --wp--style--global--content-size: ${ contentSize };`;\n\t}\n\n\tif ( wideSize ) {\n\t\truleset += ` --wp--style--global--wide-size: ${ wideSize };`;\n\t}\n\n\tif ( useRootPaddingAlign ) {\n\t\t/*\n\t\t * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n\t\t * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n\t\t */\n\t\truleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) { padding-right: 0; padding-left: 0; }\n\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull { margin-right: 0; margin-left: 0; }\n\t\t\t.has-global-padding > .alignfull:where(:not(.has-global-padding):not(.is-layout-flex):not(.is-layout-grid)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t.has-global-padding :where(.has-global-padding) > .alignfull:where(:not(.has-global-padding)) > :where(.wp-block:not(.alignfull),p,h1,h2,h3,h4,h5,h6,ul,ol) { padding-right: 0; padding-left: 0;`;\n\t}\n\n\truleset += '}';\n\n\tnodesWithStyles.forEach(\n\t\t( {\n\t\t\tselector,\n\t\t\tduotoneSelector,\n\t\t\tstyles,\n\t\t\tfallbackGapValue,\n\t\t\thasLayoutSupport,\n\t\t\tfeatureSelectors,\n\t\t\tstyleVariationSelectors,\n\t\t} ) => {\n\t\t\t// Process styles for block support features with custom feature level\n\t\t\t// CSS selectors set.\n\t\t\tif ( featureSelectors ) {\n\t\t\t\tconst featureDeclarations = getFeatureDeclarations(\n\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t( [ cssSelector, declarations ] ) => {\n\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\tconst rules = declarations.join( ';' );\n\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( styleVariationSelectors ) {\n\t\t\t\tObject.entries( styleVariationSelectors ).forEach(\n\t\t\t\t\t( [ styleVariationName, styleVariationSelector ] ) => {\n\t\t\t\t\t\tconst styleVariations =\n\t\t\t\t\t\t\tstyles?.variations?.[ styleVariationName ];\n\t\t\t\t\t\tif ( styleVariations ) {\n\t\t\t\t\t\t\t// If the block uses any custom selectors for block support, add those first.\n\t\t\t\t\t\t\tif ( featureSelectors ) {\n\t\t\t\t\t\t\t\tconst featureDeclarations =\n\t\t\t\t\t\t\t\t\tgetFeatureDeclarations(\n\t\t\t\t\t\t\t\t\t\tfeatureSelectors,\n\t\t\t\t\t\t\t\t\t\tstyleVariations\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tObject.entries( featureDeclarations ).forEach(\n\t\t\t\t\t\t\t\t\t( [ baseSelector, declarations ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( declarations.length ) {\n\t\t\t\t\t\t\t\t\t\t\tconst cssSelector =\n\t\t\t\t\t\t\t\t\t\t\t\tconcatFeatureVariationSelectorString(\n\t\t\t\t\t\t\t\t\t\t\t\t\tbaseSelector,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyleVariationSelector\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tconst rules =\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarations.join( ';' );\n\t\t\t\t\t\t\t\t\t\t\truleset += `${ cssSelector }{${ rules };}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Otherwise add regular selectors.\n\t\t\t\t\t\t\tconst styleVariationDeclarations =\n\t\t\t\t\t\t\t\tgetStylesDeclarations(\n\t\t\t\t\t\t\t\t\tstyleVariations,\n\t\t\t\t\t\t\t\t\tstyleVariationSelector,\n\t\t\t\t\t\t\t\t\tuseRootPaddingAlign,\n\t\t\t\t\t\t\t\t\ttree\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( styleVariationDeclarations.length ) {\n\t\t\t\t\t\t\t\truleset += `${ styleVariationSelector }{${ styleVariationDeclarations.join(\n\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t) };}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Process duotone styles.\n\t\t\tif ( duotoneSelector ) {\n\t\t\t\tconst duotoneStyles = {};\n\t\t\t\tif ( styles?.filter ) {\n\t\t\t\t\tduotoneStyles.filter = styles.filter;\n\t\t\t\t\tdelete styles.filter;\n\t\t\t\t}\n\t\t\t\tconst duotoneDeclarations =\n\t\t\t\t\tgetStylesDeclarations( duotoneStyles );\n\t\t\t\tif ( duotoneDeclarations.length ) {\n\t\t\t\t\truleset += `${ duotoneSelector }{${ duotoneDeclarations.join(\n\t\t\t\t\t\t';'\n\t\t\t\t\t) };}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Process blockGap and layout styles.\n\t\t\tif (\n\t\t\t\t! disableLayoutStyles &&\n\t\t\t\t( ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport )\n\t\t\t) {\n\t\t\t\truleset += getLayoutStyles( {\n\t\t\t\t\tstyle: styles,\n\t\t\t\t\tselector,\n\t\t\t\t\thasBlockGapSupport,\n\t\t\t\t\thasFallbackGapSupport,\n\t\t\t\t\tfallbackGapValue,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Process the remaining block styles (they use either normal block class or __experimentalSelector).\n\t\t\tconst declarations = getStylesDeclarations(\n\t\t\t\tstyles,\n\t\t\t\tselector,\n\t\t\t\tuseRootPaddingAlign,\n\t\t\t\ttree\n\t\t\t);\n\t\t\tif ( declarations?.length ) {\n\t\t\t\truleset += `${ selector }{${ declarations.join( ';' ) };}`;\n\t\t\t}\n\n\t\t\t// Check for pseudo selector in `styles` and handle separately.\n\t\t\tconst pseudoSelectorStyles = Object.entries( styles ).filter(\n\t\t\t\t( [ key ] ) => key.startsWith( ':' )\n\t\t\t);\n\n\t\t\tif ( pseudoSelectorStyles?.length ) {\n\t\t\t\tpseudoSelectorStyles.forEach(\n\t\t\t\t\t( [ pseudoKey, pseudoStyle ] ) => {\n\t\t\t\t\t\tconst pseudoDeclarations =\n\t\t\t\t\t\t\tgetStylesDeclarations( pseudoStyle );\n\n\t\t\t\t\t\tif ( ! pseudoDeclarations?.length ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `selector` maybe provided in a form\n\t\t\t\t\t\t// where block level selectors have sub element\n\t\t\t\t\t\t// selectors appended to them as a comma separated\n\t\t\t\t\t\t// string.\n\t\t\t\t\t\t// e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n\t\t\t\t\t\t// Split and append pseudo selector to create\n\t\t\t\t\t\t// the proper rules to target the elements.\n\t\t\t\t\t\tconst _selector = selector\n\t\t\t\t\t\t\t.split( ',' )\n\t\t\t\t\t\t\t.map( ( sel ) => sel + pseudoKey )\n\t\t\t\t\t\t\t.join( ',' );\n\n\t\t\t\t\t\tconst pseudoRule = `${ _selector }{${ pseudoDeclarations.join(\n\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t) };}`;\n\n\t\t\t\t\t\truleset += pseudoRule;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t);\n\n\t/* Add alignment / layout styles */\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n\truleset =\n\t\truleset +\n\t\t'.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n\n\tif ( hasBlockGapSupport ) {\n\t\t// Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n\t\tconst gapValue =\n\t\t\tgetGapCSSValue( tree?.styles?.spacing?.blockGap ) || '0.5em';\n\t\truleset =\n\t\t\truleset +\n\t\t\t`:where(.wp-site-blocks) > * { margin-block-start: ${ gapValue }; margin-block-end: 0; }`;\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :first-child:first-child { margin-block-start: 0; }';\n\t\truleset =\n\t\t\truleset +\n\t\t\t':where(.wp-site-blocks) > :last-child:last-child { margin-block-end: 0; }';\n\t}\n\n\tnodesWithSettings.forEach( ( { selector, presets } ) => {\n\t\tif ( ROOT_BLOCK_SELECTOR === selector ) {\n\t\t\t// Do not add extra specificity for top-level classes.\n\t\t\tselector = '';\n\t\t}\n\n\t\tconst classes = getPresetsClasses( selector, presets );\n\t\tif ( classes.length > 0 ) {\n\t\t\truleset += classes;\n\t\t}\n\t} );\n\n\treturn ruleset;\n};\n\nexport function toSvgFilters( tree, blockSelectors ) {\n\tconst nodesWithSettings = getNodesWithSettings( tree, blockSelectors );\n\treturn nodesWithSettings.flatMap( ( { presets } ) => {\n\t\treturn getPresetsSvgFilters( presets );\n\t} );\n}\n\nconst getSelectorsConfig = ( blockType, rootSelector ) => {\n\tif (\n\t\tblockType?.selectors &&\n\t\tObject.keys( blockType.selectors ).length > 0\n\t) {\n\t\treturn blockType.selectors;\n\t}\n\n\tconst config = { root: rootSelector };\n\tObject.entries( BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS ).forEach(\n\t\t( [ featureKey, featureName ] ) => {\n\t\t\tconst featureSelector = getBlockCSSSelector(\n\t\t\t\tblockType,\n\t\t\t\tfeatureKey\n\t\t\t);\n\n\t\t\tif ( featureSelector ) {\n\t\t\t\tconfig[ featureName ] = featureSelector;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn config;\n};\n\nexport const getBlockSelectors = ( blockTypes, getBlockStyles ) => {\n\tconst result = {};\n\tblockTypes.forEach( ( blockType ) => {\n\t\tconst name = blockType.name;\n\t\tconst selector = getBlockCSSSelector( blockType );\n\t\tlet duotoneSelector = getBlockCSSSelector(\n\t\t\tblockType,\n\t\t\t'filter.duotone'\n\t\t);\n\n\t\t// Keep backwards compatibility for support.color.__experimentalDuotone.\n\t\tif ( ! duotoneSelector ) {\n\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\n\t\t\tconst duotoneSupport = getBlockSupport(\n\t\t\t\tblockType,\n\t\t\t\t'color.__experimentalDuotone',\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tduotoneSelector =\n\t\t\t\tduotoneSupport && scopeSelector( rootSelector, duotoneSupport );\n\t\t}\n\n\t\tconst hasLayoutSupport =\n\t\t\t!! blockType?.supports?.layout ||\n\t\t\t!! blockType?.supports?.__experimentalLayout;\n\t\tconst fallbackGapValue =\n\t\t\tblockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n\n\t\tconst blockStyleVariations = getBlockStyles( name );\n\t\tconst styleVariationSelectors = {};\n\t\tif ( blockStyleVariations?.length ) {\n\t\t\tblockStyleVariations.forEach( ( variation ) => {\n\t\t\t\tconst styleVariationSelector = `.is-style-${ variation.name }${ selector }`;\n\t\t\t\tstyleVariationSelectors[ variation.name ] =\n\t\t\t\t\tstyleVariationSelector;\n\t\t\t} );\n\t\t}\n\t\t// For each block support feature add any custom selectors.\n\t\tconst featureSelectors = getSelectorsConfig( blockType, selector );\n\n\t\tresult[ name ] = {\n\t\t\tduotoneSelector,\n\t\t\tfallbackGapValue,\n\t\t\tfeatureSelectors: Object.keys( featureSelectors ).length\n\t\t\t\t? featureSelectors\n\t\t\t\t: undefined,\n\t\t\thasLayoutSupport,\n\t\t\tname,\n\t\t\tselector,\n\t\t\tstyleVariationSelectors: Object.keys( styleVariationSelectors )\n\t\t\t\t.length\n\t\t\t\t? styleVariationSelectors\n\t\t\t\t: undefined,\n\t\t};\n\t} );\n\n\treturn result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator( config ) {\n\tconst needsSeparatorStyleUpdate =\n\t\tconfig.styles?.blocks?.[ 'core/separator' ] &&\n\t\tconfig.styles?.blocks?.[ 'core/separator' ].color?.background &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].color?.text &&\n\t\t! config.styles?.blocks?.[ 'core/separator' ].border?.color;\n\tif ( needsSeparatorStyleUpdate ) {\n\t\treturn {\n\t\t\t...config,\n\t\t\tstyles: {\n\t\t\t\t...config.styles,\n\t\t\t\tblocks: {\n\t\t\t\t\t...config.styles.blocks,\n\t\t\t\t\t'core/separator': {\n\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ],\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t...config.styles.blocks[ 'core/separator' ].color,\n\t\t\t\t\t\t\ttext: config.styles?.blocks[ 'core/separator' ]\n\t\t\t\t\t\t\t\t.color.background,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn config;\n}\n\nconst processCSSNesting = ( css, blockSelector ) => {\n\tlet processedCSS = '';\n\n\t// Split CSS nested rules.\n\tconst parts = css.split( '&' );\n\tparts.forEach( ( part ) => {\n\t\tprocessedCSS += ! part.includes( '{' )\n\t\t\t? blockSelector + '{' + part + '}' // If the part doesn't contain braces, it applies to the root level.\n\t\t\t: blockSelector + part; // Prepend the selector, which effectively replaces the \"&\" character.\n\t} );\n\treturn processedCSS;\n};\n\n/**\n * Returns the global styles output using a global styles configuration.\n * If wishing to generate global styles and settings based on the\n * global styles config loaded in the editor context, use `useGlobalStylesOutput()`.\n * The use case for a custom config is to generate bespoke styles\n * and settings for previews, or other out-of-editor experiences.\n *\n * @param {Object} mergedConfig Global styles configuration.\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutputWithConfig( mergedConfig = {} ) {\n\tconst [ blockGap ] = useGlobalSetting( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGap !== null;\n\tconst hasFallbackGapSupport = ! hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n\tconst disableLayoutStyles = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn !! getSettings().disableLayoutStyles;\n\t} );\n\n\tconst getBlockStyles = useSelect( ( select ) => {\n\t\treturn select( blocksStore ).getBlockStyles;\n\t}, [] );\n\n\treturn useMemo( () => {\n\t\tif ( ! mergedConfig?.styles || ! mergedConfig?.settings ) {\n\t\t\treturn [];\n\t\t}\n\t\tmergedConfig = updateConfigWithSeparator( mergedConfig );\n\n\t\tconst blockSelectors = getBlockSelectors(\n\t\t\tgetBlockTypes(),\n\t\t\tgetBlockStyles\n\t\t);\n\n\t\tconst customProperties = toCustomProperties(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors\n\t\t);\n\t\tconst globalStyles = toStyles(\n\t\t\tmergedConfig,\n\t\t\tblockSelectors,\n\t\t\thasBlockGapSupport,\n\t\t\thasFallbackGapSupport,\n\t\t\tdisableLayoutStyles\n\t\t);\n\t\tconst svgs = toSvgFilters( mergedConfig, blockSelectors );\n\n\t\tconst styles = [\n\t\t\t{\n\t\t\t\tcss: customProperties,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcss: globalStyles,\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t// Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n\t\t\t{\n\t\t\t\tcss: mergedConfig.styles.css ?? '',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tassets: svgs,\n\t\t\t\t__unstableType: 'svg',\n\t\t\t\tisGlobalStyles: true,\n\t\t\t},\n\t\t];\n\n\t\t// Loop through the blocks to check if there are custom CSS values.\n\t\t// If there are, get the block selector and push the selector together with\n\t\t// the CSS value to the 'stylesheets' array.\n\t\tgetBlockTypes().forEach( ( blockType ) => {\n\t\t\tif ( mergedConfig.styles.blocks[ blockType.name ]?.css ) {\n\t\t\t\tconst selector = blockSelectors[ blockType.name ].selector;\n\t\t\t\tstyles.push( {\n\t\t\t\t\tcss: processCSSNesting(\n\t\t\t\t\t\tmergedConfig.styles.blocks[ blockType.name ]?.css,\n\t\t\t\t\t\tselector\n\t\t\t\t\t),\n\t\t\t\t\tisGlobalStyles: true,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn [ styles, mergedConfig.settings ];\n\t}, [\n\t\thasBlockGapSupport,\n\t\thasFallbackGapSupport,\n\t\tmergedConfig,\n\t\tdisableLayoutStyles,\n\t] );\n}\n\n/**\n * Returns the global styles output based on the current state of global styles config loaded in the editor context.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutput() {\n\tconst { merged: mergedConfig } = useContext( GlobalStylesContext );\n\treturn useGlobalStylesOutputWithConfig( mergedConfig );\n}\n"],"mappings":"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"}
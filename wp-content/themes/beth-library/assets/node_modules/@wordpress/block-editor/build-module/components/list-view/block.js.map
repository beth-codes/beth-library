{"version":3,"names":["classnames","hasBlockSupport","__experimentalTreeGridCell","TreeGridCell","__experimentalTreeGridItem","TreeGridItem","useInstanceId","moreVertical","useState","useRef","useEffect","useCallback","memo","useDispatch","useSelect","sprintf","__","focus","ListViewLeaf","useListViewScrollIntoView","BlockMoverUpButton","BlockMoverDownButton","ListViewBlockContents","useListViewContext","getBlockPositionDescription","store","blockEditorStore","useBlockDisplayInformation","useBlockLock","AriaReferencedText","ListViewBlock","block","clientId","isDragged","isSelected","isBranchSelected","selectBlock","position","level","rowCount","siblingBlockCount","showBlockMovers","path","isExpanded","selectedClientIds","isSyncedBranch","cellRef","rowRef","isHovered","setIsHovered","isLocked","canEdit","isFirstSelectedBlock","isLastSelectedBlock","length","toggleBlockHighlight","blockInformation","blockTitle","title","select","getBlock","blockName","getBlockName","blockEditingMode","getBlockEditingMode","showBlockActions","instanceId","descriptionId","blockPositionDescription","blockAriaLabel","settingsAriaLabel","isTreeGridMounted","expand","collapse","BlockSettingsMenu","listViewInstanceId","expandedState","setInsertedBlock","treeGridElementRef","hasSiblings","hasRenderedMovers","moverCellClassName","listViewBlockSettingsClassName","current","onMouseEnter","onMouseLeave","selectEditorBlock","event","preventDefault","updateFocusAndSelection","focusClientId","shouldSelectBlock","undefined","getFocusElement","row","querySelector","focusable","find","focusElement","window","requestAnimationFrame","toggleExpanded","stopPropagation","colSpan","classes","isSynced","dropdownClientIds","includes","rowItemRef","currentlyEditingBlockInCanvas","createElement","className","onFocus","onBlur","id","ref","tabIndex","onClick","onToggleExpanded","ariaLabel","ariaDescribedBy","Fragment","withoutGridItem","orientation","clientIds","icon","label","toggleProps","disableOpenOnArrowDown","__experimentalSelectBlock"],"sources":["@wordpress/block-editor/src/components/list-view/block.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport {\n\t__experimentalTreeGridCell as TreeGridCell,\n\t__experimentalTreeGridItem as TreeGridItem,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { moreVertical } from '@wordpress/icons';\nimport {\n\tuseState,\n\tuseRef,\n\tuseEffect,\n\tuseCallback,\n\tmemo,\n} from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { focus } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport ListViewLeaf from './leaf';\nimport useListViewScrollIntoView from './use-list-view-scroll-into-view';\nimport {\n\tBlockMoverUpButton,\n\tBlockMoverDownButton,\n} from '../block-mover/button';\nimport ListViewBlockContents from './block-contents';\nimport { useListViewContext } from './context';\nimport { getBlockPositionDescription } from './utils';\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport { useBlockLock } from '../block-lock';\nimport AriaReferencedText from './aria-referenced-text';\n\nfunction ListViewBlock( {\n\tblock: { clientId },\n\tisDragged,\n\tisSelected,\n\tisBranchSelected,\n\tselectBlock,\n\tposition,\n\tlevel,\n\trowCount,\n\tsiblingBlockCount,\n\tshowBlockMovers,\n\tpath,\n\tisExpanded,\n\tselectedClientIds,\n\tisSyncedBranch,\n} ) {\n\tconst cellRef = useRef( null );\n\tconst rowRef = useRef( null );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\n\tconst { isLocked, canEdit } = useBlockLock( clientId );\n\n\tconst isFirstSelectedBlock =\n\t\tisSelected && selectedClientIds[ 0 ] === clientId;\n\tconst isLastSelectedBlock =\n\t\tisSelected &&\n\t\tselectedClientIds[ selectedClientIds.length - 1 ] === clientId;\n\n\tconst { toggleBlockHighlight } = useDispatch( blockEditorStore );\n\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\tconst blockTitle = blockInformation?.title || __( 'Untitled' );\n\tconst block = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlock( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockName = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockName( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockEditingMode = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlockEditingMode( clientId ),\n\t\t[ clientId ]\n\t);\n\n\tconst showBlockActions =\n\t\t// When a block hides its toolbar it also hides the block settings menu,\n\t\t// since that menu is part of the toolbar in the editor canvas.\n\t\t// List View respects this by also hiding the block settings menu.\n\t\thasBlockSupport( blockName, '__experimentalToolbar', true ) &&\n\t\t// Don't show the settings menu if block is disabled or content only.\n\t\tblockEditingMode === 'default';\n\tconst instanceId = useInstanceId( ListViewBlock );\n\tconst descriptionId = `list-view-block-select-button__${ instanceId }`;\n\tconst blockPositionDescription = getBlockPositionDescription(\n\t\tposition,\n\t\tsiblingBlockCount,\n\t\tlevel\n\t);\n\n\tconst blockAriaLabel = isLocked\n\t\t? sprintf(\n\t\t\t\t// translators: %s: The title of the block. This string indicates a link to select the locked block.\n\t\t\t\t__( '%s (locked)' ),\n\t\t\t\tblockTitle\n\t\t  )\n\t\t: blockTitle;\n\n\tconst settingsAriaLabel = sprintf(\n\t\t// translators: %s: The title of the block.\n\t\t__( 'Options for %s' ),\n\t\tblockTitle\n\t);\n\n\tconst {\n\t\tisTreeGridMounted,\n\t\texpand,\n\t\tcollapse,\n\t\tBlockSettingsMenu,\n\t\tlistViewInstanceId,\n\t\texpandedState,\n\t\tsetInsertedBlock,\n\t\ttreeGridElementRef,\n\t} = useListViewContext();\n\n\tconst hasSiblings = siblingBlockCount > 0;\n\tconst hasRenderedMovers = showBlockMovers && hasSiblings;\n\tconst moverCellClassName = classnames(\n\t\t'block-editor-list-view-block__mover-cell',\n\t\t{ 'is-visible': isHovered || isSelected }\n\t);\n\n\tconst listViewBlockSettingsClassName = classnames(\n\t\t'block-editor-list-view-block__menu-cell',\n\t\t{ 'is-visible': isHovered || isFirstSelectedBlock }\n\t);\n\n\t// If ListView has experimental features related to the Persistent List View,\n\t// only focus the selected list item on mount; otherwise the list would always\n\t// try to steal the focus from the editor canvas.\n\tuseEffect( () => {\n\t\tif ( ! isTreeGridMounted && isSelected ) {\n\t\t\tcellRef.current.focus();\n\t\t}\n\t}, [] );\n\n\tconst onMouseEnter = useCallback( () => {\n\t\tsetIsHovered( true );\n\t\ttoggleBlockHighlight( clientId, true );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\tconst onMouseLeave = useCallback( () => {\n\t\tsetIsHovered( false );\n\t\ttoggleBlockHighlight( clientId, false );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\n\tconst selectEditorBlock = useCallback(\n\t\t( event ) => {\n\t\t\tselectBlock( event, clientId );\n\t\t\tevent.preventDefault();\n\t\t},\n\t\t[ clientId, selectBlock ]\n\t);\n\n\tconst updateFocusAndSelection = useCallback(\n\t\t( focusClientId, shouldSelectBlock ) => {\n\t\t\tif ( shouldSelectBlock ) {\n\t\t\t\tselectBlock( undefined, focusClientId, null, null );\n\t\t\t}\n\n\t\t\tconst getFocusElement = () => {\n\t\t\t\tconst row = treeGridElementRef.current?.querySelector(\n\t\t\t\t\t`[role=row][data-block=\"${ focusClientId }\"]`\n\t\t\t\t);\n\t\t\t\tif ( ! row ) return null;\n\t\t\t\t// Focus the first focusable in the row, which is the ListViewBlockSelectButton.\n\t\t\t\treturn focus.focusable.find( row )[ 0 ];\n\t\t\t};\n\n\t\t\tlet focusElement = getFocusElement();\n\t\t\tif ( focusElement ) {\n\t\t\t\tfocusElement.focus();\n\t\t\t} else {\n\t\t\t\t// The element hasn't been painted yet. Defer focusing on the next frame.\n\t\t\t\t// This could happen when all blocks have been deleted and the default block\n\t\t\t\t// hasn't been added to the editor yet.\n\t\t\t\twindow.requestAnimationFrame( () => {\n\t\t\t\t\tfocusElement = getFocusElement();\n\t\t\t\t\t// Ignore if the element still doesn't exist.\n\t\t\t\t\tif ( focusElement ) {\n\t\t\t\t\t\tfocusElement.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[ selectBlock, treeGridElementRef ]\n\t);\n\n\tconst toggleExpanded = useCallback(\n\t\t( event ) => {\n\t\t\t// Prevent shift+click from opening link in a new window when toggling.\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif ( isExpanded === true ) {\n\t\t\t\tcollapse( clientId );\n\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\texpand( clientId );\n\t\t\t}\n\t\t},\n\t\t[ clientId, expand, collapse, isExpanded ]\n\t);\n\n\tlet colSpan;\n\tif ( hasRenderedMovers ) {\n\t\tcolSpan = 2;\n\t} else if ( ! showBlockActions ) {\n\t\tcolSpan = 3;\n\t}\n\n\tconst classes = classnames( {\n\t\t'is-selected': isSelected,\n\t\t'is-first-selected': isFirstSelectedBlock,\n\t\t'is-last-selected': isLastSelectedBlock,\n\t\t'is-branch-selected': isBranchSelected,\n\t\t'is-synced-branch': isSyncedBranch,\n\t\t'is-dragging': isDragged,\n\t\t'has-single-cell': ! showBlockActions,\n\t\t'is-synced': blockInformation?.isSynced,\n\t} );\n\n\t// Only include all selected blocks if the currently clicked on block\n\t// is one of the selected blocks. This ensures that if a user attempts\n\t// to alter a block that isn't part of the selection, they're still able\n\t// to do so.\n\tconst dropdownClientIds = selectedClientIds.includes( clientId )\n\t\t? selectedClientIds\n\t\t: [ clientId ];\n\n\t// Pass in a ref to the row, so that it can be scrolled\n\t// into view when selected. For long lists, the placeholder for the\n\t// selected block is also observed, within ListViewLeafPlaceholder.\n\tuseListViewScrollIntoView( {\n\t\tisSelected,\n\t\trowItemRef: rowRef,\n\t\tselectedClientIds,\n\t} );\n\n\t// Detect if there is a block in the canvas currently being edited and multi-selection is not happening.\n\tconst currentlyEditingBlockInCanvas =\n\t\tisSelected && selectedClientIds.length === 1;\n\n\treturn (\n\t\t<ListViewLeaf\n\t\t\tclassName={ classes }\n\t\t\tonMouseEnter={ onMouseEnter }\n\t\t\tonMouseLeave={ onMouseLeave }\n\t\t\tonFocus={ onMouseEnter }\n\t\t\tonBlur={ onMouseLeave }\n\t\t\tlevel={ level }\n\t\t\tposition={ position }\n\t\t\trowCount={ rowCount }\n\t\t\tpath={ path }\n\t\t\tid={ `list-view-${ listViewInstanceId }-block-${ clientId }` }\n\t\t\tdata-block={ clientId }\n\t\t\tdata-expanded={ canEdit ? isExpanded : undefined }\n\t\t\tref={ rowRef }\n\t\t>\n\t\t\t<TreeGridCell\n\t\t\t\tclassName=\"block-editor-list-view-block__contents-cell\"\n\t\t\t\tcolSpan={ colSpan }\n\t\t\t\tref={ cellRef }\n\t\t\t\taria-selected={ !! isSelected }\n\t\t\t>\n\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t<div className=\"block-editor-list-view-block__contents-container\">\n\t\t\t\t\t\t<ListViewBlockContents\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectEditorBlock }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\ttabIndex={\n\t\t\t\t\t\t\t\tcurrentlyEditingBlockInCanvas ? 0 : tabIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tisExpanded={ canEdit ? isExpanded : undefined }\n\t\t\t\t\t\t\tselectedClientIds={ selectedClientIds }\n\t\t\t\t\t\t\tariaLabel={ blockAriaLabel }\n\t\t\t\t\t\t\tariaDescribedBy={ descriptionId }\n\t\t\t\t\t\t\tupdateFocusAndSelection={ updateFocusAndSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AriaReferencedText id={ descriptionId }>\n\t\t\t\t\t\t\t{ blockPositionDescription }\n\t\t\t\t\t\t</AriaReferencedText>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</TreeGridCell>\n\t\t\t{ hasRenderedMovers && (\n\t\t\t\t<>\n\t\t\t\t\t<TreeGridCell\n\t\t\t\t\t\tclassName={ moverCellClassName }\n\t\t\t\t\t\twithoutGridItem\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t</TreeGridCell>\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t{ showBlockActions && BlockSettingsMenu && (\n\t\t\t\t<TreeGridCell\n\t\t\t\t\tclassName={ listViewBlockSettingsClassName }\n\t\t\t\t\taria-selected={ !! isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t<BlockSettingsMenu\n\t\t\t\t\t\t\tclientIds={ dropdownClientIds }\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\t\t\tlabel={ settingsAriaLabel }\n\t\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\tclassName: 'block-editor-list-view-block__menu',\n\t\t\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisableOpenOnArrowDown\n\t\t\t\t\t\t\texpand={ expand }\n\t\t\t\t\t\t\texpandedState={ expandedState }\n\t\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\n\t\t\t\t\t\t\t__experimentalSelectBlock={\n\t\t\t\t\t\t\t\tupdateFocusAndSelection\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t) }\n\t\t</ListViewLeaf>\n\t);\n}\n\nexport default memo( ListViewBlock );\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,YAAY;;AAEnC;AACA;AACA;AACA,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SACCC,0BAA0B,IAAIC,YAAY,EAC1CC,0BAA0B,IAAIC,YAAY,QACpC,uBAAuB;AAC9B,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SACCC,QAAQ,EACRC,MAAM,EACNC,SAAS,EACTC,WAAW,EACXC,IAAI,QACE,oBAAoB;AAC3B,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,OAAO,EAAEC,EAAE,QAAQ,iBAAiB;AAC7C,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA,OAAOC,YAAY,MAAM,QAAQ;AACjC,OAAOC,yBAAyB,MAAM,kCAAkC;AACxE,SACCC,kBAAkB,EAClBC,oBAAoB,QACd,uBAAuB;AAC9B,OAAOC,qBAAqB,MAAM,kBAAkB;AACpD,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,SAASC,2BAA2B,QAAQ,SAAS;AACrD,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AACvD,OAAOC,0BAA0B,MAAM,kCAAkC;AACzE,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,kBAAkB,MAAM,wBAAwB;AAEvD,SAASC,aAAaA,CAAE;EACvBC,KAAK,EAAE;IAAEC;EAAS,CAAC;EACnBC,SAAS;EACTC,UAAU;EACVC,gBAAgB;EAChBC,WAAW;EACXC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,iBAAiB;EACjBC,eAAe;EACfC,IAAI;EACJC,UAAU;EACVC,iBAAiB;EACjBC;AACD,CAAC,EAAG;EACH,MAAMC,OAAO,GAAGrC,MAAM,CAAE,IAAK,CAAC;EAC9B,MAAMsC,MAAM,GAAGtC,MAAM,CAAE,IAAK,CAAC;EAC7B,MAAM,CAAEuC,SAAS,EAAEC,YAAY,CAAE,GAAGzC,QAAQ,CAAE,KAAM,CAAC;EAErD,MAAM;IAAE0C,QAAQ;IAAEC;EAAQ,CAAC,GAAGvB,YAAY,CAAEI,QAAS,CAAC;EAEtD,MAAMoB,oBAAoB,GACzBlB,UAAU,IAAIU,iBAAiB,CAAE,CAAC,CAAE,KAAKZ,QAAQ;EAClD,MAAMqB,mBAAmB,GACxBnB,UAAU,IACVU,iBAAiB,CAAEA,iBAAiB,CAACU,MAAM,GAAG,CAAC,CAAE,KAAKtB,QAAQ;EAE/D,MAAM;IAAEuB;EAAqB,CAAC,GAAG1C,WAAW,CAAEa,gBAAiB,CAAC;EAEhE,MAAM8B,gBAAgB,GAAG7B,0BAA0B,CAAEK,QAAS,CAAC;EAC/D,MAAMyB,UAAU,GAAGD,gBAAgB,EAAEE,KAAK,IAAI1C,EAAE,CAAE,UAAW,CAAC;EAC9D,MAAMe,KAAK,GAAGjB,SAAS,CACpB6C,MAAM,IAAMA,MAAM,CAAEjC,gBAAiB,CAAC,CAACkC,QAAQ,CAAE5B,QAAS,CAAC,EAC7D,CAAEA,QAAQ,CACX,CAAC;EACD,MAAM6B,SAAS,GAAG/C,SAAS,CACxB6C,MAAM,IAAMA,MAAM,CAAEjC,gBAAiB,CAAC,CAACoC,YAAY,CAAE9B,QAAS,CAAC,EACjE,CAAEA,QAAQ,CACX,CAAC;EACD,MAAM+B,gBAAgB,GAAGjD,SAAS,CAC/B6C,MAAM,IACPA,MAAM,CAAEjC,gBAAiB,CAAC,CAACsC,mBAAmB,CAAEhC,QAAS,CAAC,EAC3D,CAAEA,QAAQ,CACX,CAAC;EAED,MAAMiC,gBAAgB;EACrB;EACA;EACA;EACAhE,eAAe,CAAE4D,SAAS,EAAE,uBAAuB,EAAE,IAAK,CAAC;EAC3D;EACAE,gBAAgB,KAAK,SAAS;EAC/B,MAAMG,UAAU,GAAG5D,aAAa,CAAEwB,aAAc,CAAC;EACjD,MAAMqC,aAAa,GAAI,kCAAkCD,UAAY,EAAC;EACtE,MAAME,wBAAwB,GAAG5C,2BAA2B,CAC3Da,QAAQ,EACRG,iBAAiB,EACjBF,KACD,CAAC;EAED,MAAM+B,cAAc,GAAGnB,QAAQ,GAC5BnC,OAAO;EACP;EACAC,EAAE,CAAE,aAAc,CAAC,EACnByC,UACA,CAAC,GACDA,UAAU;EAEb,MAAMa,iBAAiB,GAAGvD,OAAO;EAChC;EACAC,EAAE,CAAE,gBAAiB,CAAC,EACtByC,UACD,CAAC;EAED,MAAM;IACLc,iBAAiB;IACjBC,MAAM;IACNC,QAAQ;IACRC,iBAAiB;IACjBC,kBAAkB;IAClBC,aAAa;IACbC,gBAAgB;IAChBC;EACD,CAAC,GAAGvD,kBAAkB,CAAC,CAAC;EAExB,MAAMwD,WAAW,GAAGvC,iBAAiB,GAAG,CAAC;EACzC,MAAMwC,iBAAiB,GAAGvC,eAAe,IAAIsC,WAAW;EACxD,MAAME,kBAAkB,GAAGjF,UAAU,CACpC,0CAA0C,EAC1C;IAAE,YAAY,EAAEgD,SAAS,IAAId;EAAW,CACzC,CAAC;EAED,MAAMgD,8BAA8B,GAAGlF,UAAU,CAChD,yCAAyC,EACzC;IAAE,YAAY,EAAEgD,SAAS,IAAII;EAAqB,CACnD,CAAC;;EAED;EACA;EACA;EACA1C,SAAS,CAAE,MAAM;IAChB,IAAK,CAAE6D,iBAAiB,IAAIrC,UAAU,EAAG;MACxCY,OAAO,CAACqC,OAAO,CAAClE,KAAK,CAAC,CAAC;IACxB;EACD,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMmE,YAAY,GAAGzE,WAAW,CAAE,MAAM;IACvCsC,YAAY,CAAE,IAAK,CAAC;IACpBM,oBAAoB,CAAEvB,QAAQ,EAAE,IAAK,CAAC;EACvC,CAAC,EAAE,CAAEA,QAAQ,EAAEiB,YAAY,EAAEM,oBAAoB,CAAG,CAAC;EACrD,MAAM8B,YAAY,GAAG1E,WAAW,CAAE,MAAM;IACvCsC,YAAY,CAAE,KAAM,CAAC;IACrBM,oBAAoB,CAAEvB,QAAQ,EAAE,KAAM,CAAC;EACxC,CAAC,EAAE,CAAEA,QAAQ,EAAEiB,YAAY,EAAEM,oBAAoB,CAAG,CAAC;EAErD,MAAM+B,iBAAiB,GAAG3E,WAAW,CAClC4E,KAAK,IAAM;IACZnD,WAAW,CAAEmD,KAAK,EAAEvD,QAAS,CAAC;IAC9BuD,KAAK,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC,EACD,CAAExD,QAAQ,EAAEI,WAAW,CACxB,CAAC;EAED,MAAMqD,uBAAuB,GAAG9E,WAAW,CAC1C,CAAE+E,aAAa,EAAEC,iBAAiB,KAAM;IACvC,IAAKA,iBAAiB,EAAG;MACxBvD,WAAW,CAAEwD,SAAS,EAAEF,aAAa,EAAE,IAAI,EAAE,IAAK,CAAC;IACpD;IAEA,MAAMG,eAAe,GAAGA,CAAA,KAAM;MAC7B,MAAMC,GAAG,GAAGhB,kBAAkB,CAACK,OAAO,EAAEY,aAAa,CACnD,0BAA0BL,aAAe,IAC3C,CAAC;MACD,IAAK,CAAEI,GAAG,EAAG,OAAO,IAAI;MACxB;MACA,OAAO7E,KAAK,CAAC+E,SAAS,CAACC,IAAI,CAAEH,GAAI,CAAC,CAAE,CAAC,CAAE;IACxC,CAAC;IAED,IAAII,YAAY,GAAGL,eAAe,CAAC,CAAC;IACpC,IAAKK,YAAY,EAAG;MACnBA,YAAY,CAACjF,KAAK,CAAC,CAAC;IACrB,CAAC,MAAM;MACN;MACA;MACA;MACAkF,MAAM,CAACC,qBAAqB,CAAE,MAAM;QACnCF,YAAY,GAAGL,eAAe,CAAC,CAAC;QAChC;QACA,IAAKK,YAAY,EAAG;UACnBA,YAAY,CAACjF,KAAK,CAAC,CAAC;QACrB;MACD,CAAE,CAAC;IACJ;EACD,CAAC,EACD,CAAEmB,WAAW,EAAE0C,kBAAkB,CAClC,CAAC;EAED,MAAMuB,cAAc,GAAG1F,WAAW,CAC/B4E,KAAK,IAAM;IACZ;IACAA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBD,KAAK,CAACe,eAAe,CAAC,CAAC;IACvB,IAAK3D,UAAU,KAAK,IAAI,EAAG;MAC1B8B,QAAQ,CAAEzC,QAAS,CAAC;IACrB,CAAC,MAAM,IAAKW,UAAU,KAAK,KAAK,EAAG;MAClC6B,MAAM,CAAExC,QAAS,CAAC;IACnB;EACD,CAAC,EACD,CAAEA,QAAQ,EAAEwC,MAAM,EAAEC,QAAQ,EAAE9B,UAAU,CACzC,CAAC;EAED,IAAI4D,OAAO;EACX,IAAKvB,iBAAiB,EAAG;IACxBuB,OAAO,GAAG,CAAC;EACZ,CAAC,MAAM,IAAK,CAAEtC,gBAAgB,EAAG;IAChCsC,OAAO,GAAG,CAAC;EACZ;EAEA,MAAMC,OAAO,GAAGxG,UAAU,CAAE;IAC3B,aAAa,EAAEkC,UAAU;IACzB,mBAAmB,EAAEkB,oBAAoB;IACzC,kBAAkB,EAAEC,mBAAmB;IACvC,oBAAoB,EAAElB,gBAAgB;IACtC,kBAAkB,EAAEU,cAAc;IAClC,aAAa,EAAEZ,SAAS;IACxB,iBAAiB,EAAE,CAAEgC,gBAAgB;IACrC,WAAW,EAAET,gBAAgB,EAAEiD;EAChC,CAAE,CAAC;;EAEH;EACA;EACA;EACA;EACA,MAAMC,iBAAiB,GAAG9D,iBAAiB,CAAC+D,QAAQ,CAAE3E,QAAS,CAAC,GAC7DY,iBAAiB,GACjB,CAAEZ,QAAQ,CAAE;;EAEf;EACA;EACA;EACAb,yBAAyB,CAAE;IAC1Be,UAAU;IACV0E,UAAU,EAAE7D,MAAM;IAClBH;EACD,CAAE,CAAC;;EAEH;EACA,MAAMiE,6BAA6B,GAClC3E,UAAU,IAAIU,iBAAiB,CAACU,MAAM,KAAK,CAAC;EAE7C,OACCwD,aAAA,CAAC5F,YAAY;IACZ6F,SAAS,EAAGP,OAAS;IACrBpB,YAAY,EAAGA,YAAc;IAC7BC,YAAY,EAAGA,YAAc;IAC7B2B,OAAO,EAAG5B,YAAc;IACxB6B,MAAM,EAAG5B,YAAc;IACvB/C,KAAK,EAAGA,KAAO;IACfD,QAAQ,EAAGA,QAAU;IACrBE,QAAQ,EAAGA,QAAU;IACrBG,IAAI,EAAGA,IAAM;IACbwE,EAAE,EAAI,aAAavC,kBAAoB,UAAU3C,QAAU,EAAG;IAC9D,cAAaA,QAAU;IACvB,iBAAgBmB,OAAO,GAAGR,UAAU,GAAGiD,SAAW;IAClDuB,GAAG,EAAGpE;EAAQ,GAEd+D,aAAA,CAAC3G,YAAY;IACZ4G,SAAS,EAAC,6CAA6C;IACvDR,OAAO,EAAGA,OAAS;IACnBY,GAAG,EAAGrE,OAAS;IACf,iBAAgB,CAAC,CAAEZ;EAAY,GAE7B,CAAE;IAAEiF,GAAG;IAAEC,QAAQ;IAAEJ;EAAQ,CAAC,KAC7BF,aAAA;IAAKC,SAAS,EAAC;EAAkD,GAChED,aAAA,CAACxF,qBAAqB;IACrBS,KAAK,EAAGA,KAAO;IACfsF,OAAO,EAAG/B,iBAAmB;IAC7BgC,gBAAgB,EAAGjB,cAAgB;IACnCnE,UAAU,EAAGA,UAAY;IACzBG,QAAQ,EAAGA,QAAU;IACrBG,iBAAiB,EAAGA,iBAAmB;IACvCF,KAAK,EAAGA,KAAO;IACf6E,GAAG,EAAGA,GAAK;IACXC,QAAQ,EACPP,6BAA6B,GAAG,CAAC,GAAGO,QACpC;IACDJ,OAAO,EAAGA,OAAS;IACnBrE,UAAU,EAAGQ,OAAO,GAAGR,UAAU,GAAGiD,SAAW;IAC/ChD,iBAAiB,EAAGA,iBAAmB;IACvC2E,SAAS,EAAGlD,cAAgB;IAC5BmD,eAAe,EAAGrD,aAAe;IACjCsB,uBAAuB,EAAGA;EAAyB,CACnD,CAAC,EACFqB,aAAA,CAACjF,kBAAkB;IAACqF,EAAE,EAAG/C;EAAe,GACrCC,wBACiB,CAChB,CAEO,CAAC,EACbY,iBAAiB,IAClB8B,aAAA,CAAAW,QAAA,QACCX,aAAA,CAAC3G,YAAY;IACZ4G,SAAS,EAAG9B,kBAAoB;IAChCyC,eAAe;EAAA,GAEfZ,aAAA,CAACzG,YAAY,QACV,CAAE;IAAE8G,GAAG;IAAEC,QAAQ;IAAEJ;EAAQ,CAAC,KAC7BF,aAAA,CAAC1F,kBAAkB;IAClBuG,WAAW,EAAC,UAAU;IACtBC,SAAS,EAAG,CAAE5F,QAAQ,CAAI;IAC1BmF,GAAG,EAAGA,GAAK;IACXC,QAAQ,EAAGA,QAAU;IACrBJ,OAAO,EAAGA;EAAS,CACnB,CAEW,CAAC,EACfF,aAAA,CAACzG,YAAY,QACV,CAAE;IAAE8G,GAAG;IAAEC,QAAQ;IAAEJ;EAAQ,CAAC,KAC7BF,aAAA,CAACzF,oBAAoB;IACpBsG,WAAW,EAAC,UAAU;IACtBC,SAAS,EAAG,CAAE5F,QAAQ,CAAI;IAC1BmF,GAAG,EAAGA,GAAK;IACXC,QAAQ,EAAGA,QAAU;IACrBJ,OAAO,EAAGA;EAAS,CACnB,CAEW,CACD,CACb,CACF,EAEC/C,gBAAgB,IAAIS,iBAAiB,IACtCoC,aAAA,CAAC3G,YAAY;IACZ4G,SAAS,EAAG7B,8BAAgC;IAC5C,iBAAgB,CAAC,CAAEhD;EAAY,GAE7B,CAAE;IAAEiF,GAAG;IAAEC,QAAQ;IAAEJ;EAAQ,CAAC,KAC7BF,aAAA,CAACpC,iBAAiB;IACjBkD,SAAS,EAAGlB,iBAAmB;IAC/B3E,KAAK,EAAGA,KAAO;IACf8F,IAAI,EAAGtH,YAAc;IACrBuH,KAAK,EAAGxD,iBAAmB;IAC3ByD,WAAW,EAAG;MACbZ,GAAG;MACHJ,SAAS,EAAE,oCAAoC;MAC/CK,QAAQ;MACRJ;IACD,CAAG;IACHgB,sBAAsB;IACtBxD,MAAM,EAAGA,MAAQ;IACjBI,aAAa,EAAGA,aAAe;IAC/BC,gBAAgB,EAAGA,gBAAkB;IACrCoD,yBAAyB,EACxBxC;EACA,CACD,CAEW,CAEF,CAAC;AAEjB;AAEA,eAAe7E,IAAI,CAAEkB,aAAc,CAAC"}
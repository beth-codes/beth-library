{"version":3,"names":["_element","require","_compose","_data","_create","_toDom","_toHtmlString","_useDefaultStyle","_useBoundaryStyle","_useCopyHandler","_useFormatBoundaries","_useSelectObject","_useInputAndSelection","_useSelectionChangeCompat","_useDelete","useRichText","value","selectionStart","selectionEnd","placeholder","preserveWhiteSpace","onSelectionChange","onChange","__unstableMultilineTag","multilineTag","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","useRegistry","forceRender","useReducer","ref","useRef","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","create","element","multilineWrapperTags","undefined","__unstableIsEditableTree","applyRecord","newRecord","domOnly","apply","prepareEditableTree","__unstableDomOnly","_value","record","setRecordFromProps","html","formats","Array","length","replacements","start","end","hadSelectionUpdate","hasRelevantInitFormat","type","handleChangesUponInit","activeFormats","handleChange","text","toHTMLString","batch","__unstableFormats","__unstableText","applyFromProps","didMount","useLayoutEffect","activeElement","focus","mergedRefs","useMergeRefs","useDefaultStyle","useBoundaryStyle","useCopyHandler","useSelectObject","useFormatBoundaries","useDelete","useInputAndSelection","useSelectionChangeCompat","useRefEffect","getValue","__experimentalRichText"],"sources":["@wordpress/rich-text/src/component/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useCopyHandler } from './use-copy-handler';\nimport { useFormatBoundaries } from './use-format-boundaries';\nimport { useSelectObject } from './use-select-object';\nimport { useInputAndSelection } from './use-input-and-selection';\nimport { useSelectionChangeCompat } from './use-selection-change-compat';\nimport { useDelete } from './use-delete';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tpreserveWhiteSpace,\n\tonSelectionChange,\n\tonChange,\n\t__unstableMultilineTag: multilineTag,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tif ( disableFormats ) {\n\t\t\trecord.current.formats = Array( value.length );\n\t\t\trecord.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecord.current.formats = __unstableAfterParse( record.current );\n\t\t}\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdate = useRef( false );\n\n\tif ( ! record.current ) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\tsetRecordFromProps();\n\t\t// Sometimes formats are added programmatically and we need to make\n\t\t// sure it's persisted to the block store / markup. If these formats\n\t\t// are not applied, they could cause inconsistencies between the data\n\t\t// in the visual editor and the frontend. Right now, it's only relevant\n\t\t// to the `core/text-color` format, which is applied at runtime in\n\t\t// certain circunstances. See the `__unstableFilterAttributeValue`\n\t\t// function in `packages/format-library/src/text-color/index.js`.\n\t\t// @todo find a less-hacky way of solving this.\n\n\t\tconst hasRelevantInitFormat =\n\t\t\trecord.current?.formats[ 0 ]?.[ 0 ]?.type === 'core/text-color';\n\n\t\tif ( hasRelevantInitFormat ) {\n\t\t\thandleChangesUponInit( record.current );\n\t\t}\n\t} else if (\n\t\tselectionStart !== record.current.start ||\n\t\tselectionEnd !== record.current.end\n\t) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\trecord.current = {\n\t\t\t...record.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t\tactiveFormats: undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecord.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_value.current = newRecord.text;\n\t\t} else {\n\t\t\t_value.current = toHTMLString( {\n\t\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t\t  }\n\t\t\t\t\t: newRecord,\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\tconst { start, end, formats, text } = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction handleChangesUponInit( newRecord ) {\n\t\trecord.current = newRecord;\n\n\t\t_value.current = toHTMLString( {\n\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t? {\n\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t  }\n\t\t\t\t: newRecord,\n\t\t\tmultilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\tconst { formats, text } = newRecord;\n\n\t\tregistry.batch( () => {\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyRecord( record.current );\n\t\thadSelectionUpdate.current = false;\n\t}, [ hadSelectionUpdate.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record } ),\n\t\tuseCopyHandler( { record, multilineTag, preserveWhiteSpace } ),\n\t\tuseSelectObject(),\n\t\tuseFormatBoundaries( { record, applyRecord } ),\n\t\tuseDelete( {\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tmultilineTag,\n\t\t} ),\n\t\tuseInputAndSelection( {\n\t\t\trecord,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t} ),\n\t\tuseSelectionChangeCompat(),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMount.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: record.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => record.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n"],"mappings":";;;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAKA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,gBAAA,GAAAN,OAAA;AACA,IAAAO,iBAAA,GAAAP,OAAA;AACA,IAAAQ,eAAA,GAAAR,OAAA;AACA,IAAAS,oBAAA,GAAAT,OAAA;AACA,IAAAU,gBAAA,GAAAV,OAAA;AACA,IAAAW,qBAAA,GAAAX,OAAA;AACA,IAAAY,yBAAA,GAAAZ,OAAA;AACA,IAAAa,UAAA,GAAAb,OAAA;AApBA;AACA;AACA;;AAKA;AACA;AACA;;AAaO,SAASc,WAAWA,CAAE;EAC5BC,KAAK,GAAG,EAAE;EACVC,cAAc;EACdC,YAAY;EACZC,WAAW;EACXC,kBAAkB;EAClBC,iBAAiB;EACjBC,QAAQ;EACRC,sBAAsB,EAAEC,YAAY;EACpCC,wBAAwB,EAAEC,cAAc;EACxCC,oBAAoB,EAAEC,UAAU;EAChCC,sBAAsB,GAAG,EAAE;EAC3BC,oBAAoB;EACpBC,yBAAyB;EACzBC;AACD,CAAC,EAAG;EACH,MAAMC,QAAQ,GAAG,IAAAC,iBAAW,EAAC,CAAC;EAC9B,MAAM,GAAIC,WAAW,CAAE,GAAG,IAAAC,mBAAU,EAAE,OAAQ,CAAC,CAAC,CAAG,CAAC;EACpD,MAAMC,GAAG,GAAG,IAAAC,eAAM,EAAC,CAAC;EAEpB,SAASC,YAAYA,CAAA,EAAG;IACvB,MAAM;MACLC,aAAa,EAAE;QAAEC;MAAY;IAC9B,CAAC,GAAGJ,GAAG,CAACK,OAAO;IACf,MAAMC,SAAS,GAAGF,WAAW,CAACG,YAAY,CAAC,CAAC;IAC5C,MAAMC,KAAK,GACVF,SAAS,CAACG,UAAU,GAAG,CAAC,GAAGH,SAAS,CAACI,UAAU,CAAE,CAAE,CAAC,GAAG,IAAI;IAE5D,OAAO,IAAAC,cAAM,EAAE;MACdC,OAAO,EAAEZ,GAAG,CAACK,OAAO;MACpBG,KAAK;MACLrB,YAAY;MACZ0B,oBAAoB,EACnB1B,YAAY,KAAK,IAAI,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,GAAG2B,SAAS;MACnDC,wBAAwB,EAAE,IAAI;MAC9BhC;IACD,CAAE,CAAC;EACJ;EAEA,SAASiC,WAAWA,CAAEC,SAAS,EAAE;IAAEC;EAAQ,CAAC,GAAG,CAAC,CAAC,EAAG;IACnD,IAAAC,YAAK,EAAE;MACNxC,KAAK,EAAEsC,SAAS;MAChBZ,OAAO,EAAEL,GAAG,CAACK,OAAO;MACpBlB,YAAY;MACZ0B,oBAAoB,EACnB1B,YAAY,KAAK,IAAI,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,GAAG2B,SAAS;MACnDM,mBAAmB,EAAEzB,6BAA6B;MAClD0B,iBAAiB,EAAEH,OAAO;MAC1BpC;IACD,CAAE,CAAC;EACJ;;EAEA;EACA,MAAMwC,MAAM,GAAG,IAAArB,eAAM,EAAEtB,KAAM,CAAC;EAC9B,MAAM4C,MAAM,GAAG,IAAAtB,eAAM,EAAC,CAAC;EAEvB,SAASuB,kBAAkBA,CAAA,EAAG;IAC7BF,MAAM,CAACjB,OAAO,GAAG1B,KAAK;IACtB4C,MAAM,CAAClB,OAAO,GAAG,IAAAM,cAAM,EAAE;MACxBc,IAAI,EAAE9C,KAAK;MACXQ,YAAY;MACZ0B,oBAAoB,EACnB1B,YAAY,KAAK,IAAI,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,GAAG2B,SAAS;MACnD/B;IACD,CAAE,CAAC;IACH,IAAKM,cAAc,EAAG;MACrBkC,MAAM,CAAClB,OAAO,CAACqB,OAAO,GAAGC,KAAK,CAAEhD,KAAK,CAACiD,MAAO,CAAC;MAC9CL,MAAM,CAAClB,OAAO,CAACwB,YAAY,GAAGF,KAAK,CAAEhD,KAAK,CAACiD,MAAO,CAAC;IACpD;IACA,IAAKnC,oBAAoB,EAAG;MAC3B8B,MAAM,CAAClB,OAAO,CAACqB,OAAO,GAAGjC,oBAAoB,CAAE8B,MAAM,CAAClB,OAAQ,CAAC;IAChE;IACAkB,MAAM,CAAClB,OAAO,CAACyB,KAAK,GAAGlD,cAAc;IACrC2C,MAAM,CAAClB,OAAO,CAAC0B,GAAG,GAAGlD,YAAY;EAClC;EAEA,MAAMmD,kBAAkB,GAAG,IAAA/B,eAAM,EAAE,KAAM,CAAC;EAE1C,IAAK,CAAEsB,MAAM,CAAClB,OAAO,EAAG;IACvB2B,kBAAkB,CAAC3B,OAAO,GAAGd,UAAU;IACvCiC,kBAAkB,CAAC,CAAC;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMS,qBAAqB,GAC1BV,MAAM,CAAClB,OAAO,EAAEqB,OAAO,CAAE,CAAC,CAAE,GAAI,CAAC,CAAE,EAAEQ,IAAI,KAAK,iBAAiB;IAEhE,IAAKD,qBAAqB,EAAG;MAC5BE,qBAAqB,CAAEZ,MAAM,CAAClB,OAAQ,CAAC;IACxC;EACD,CAAC,MAAM,IACNzB,cAAc,KAAK2C,MAAM,CAAClB,OAAO,CAACyB,KAAK,IACvCjD,YAAY,KAAK0C,MAAM,CAAClB,OAAO,CAAC0B,GAAG,EAClC;IACDC,kBAAkB,CAAC3B,OAAO,GAAGd,UAAU;IACvCgC,MAAM,CAAClB,OAAO,GAAG;MAChB,GAAGkB,MAAM,CAAClB,OAAO;MACjByB,KAAK,EAAElD,cAAc;MACrBmD,GAAG,EAAElD,YAAY;MACjBuD,aAAa,EAAEtB;IAChB,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC,SAASuB,YAAYA,CAAEpB,SAAS,EAAG;IAClCM,MAAM,CAAClB,OAAO,GAAGY,SAAS;IAC1BD,WAAW,CAAEC,SAAU,CAAC;IAExB,IAAK5B,cAAc,EAAG;MACrBiC,MAAM,CAACjB,OAAO,GAAGY,SAAS,CAACqB,IAAI;IAChC,CAAC,MAAM;MACNhB,MAAM,CAACjB,OAAO,GAAG,IAAAkC,0BAAY,EAAE;QAC9B5D,KAAK,EAAEe,yBAAyB,GAC7B;UACA,GAAGuB,SAAS;UACZS,OAAO,EAAEhC,yBAAyB,CAAEuB,SAAU;QAC9C,CAAC,GACDA,SAAS;QACZ9B,YAAY;QACZJ;MACD,CAAE,CAAC;IACJ;IAEA,MAAM;MAAE+C,KAAK;MAAEC,GAAG;MAAEL,OAAO;MAAEY;IAAK,CAAC,GAAGrB,SAAS;;IAE/C;IACA;IACA;IACArB,QAAQ,CAAC4C,KAAK,CAAE,MAAM;MACrBxD,iBAAiB,CAAE8C,KAAK,EAAEC,GAAI,CAAC;MAC/B9C,QAAQ,CAAEqC,MAAM,CAACjB,OAAO,EAAE;QACzBoC,iBAAiB,EAAEf,OAAO;QAC1BgB,cAAc,EAAEJ;MACjB,CAAE,CAAC;IACJ,CAAE,CAAC;IACHxC,WAAW,CAAC,CAAC;EACd;EAEA,SAASqC,qBAAqBA,CAAElB,SAAS,EAAG;IAC3CM,MAAM,CAAClB,OAAO,GAAGY,SAAS;IAE1BK,MAAM,CAACjB,OAAO,GAAG,IAAAkC,0BAAY,EAAE;MAC9B5D,KAAK,EAAEe,yBAAyB,GAC7B;QACA,GAAGuB,SAAS;QACZS,OAAO,EAAEhC,yBAAyB,CAAEuB,SAAU;MAC9C,CAAC,GACDA,SAAS;MACZ9B,YAAY;MACZJ;IACD,CAAE,CAAC;IAEH,MAAM;MAAE2C,OAAO;MAAEY;IAAK,CAAC,GAAGrB,SAAS;IAEnCrB,QAAQ,CAAC4C,KAAK,CAAE,MAAM;MACrBvD,QAAQ,CAAEqC,MAAM,CAACjB,OAAO,EAAE;QACzBoC,iBAAiB,EAAEf,OAAO;QAC1BgB,cAAc,EAAEJ;MACjB,CAAE,CAAC;IACJ,CAAE,CAAC;IACHxC,WAAW,CAAC,CAAC;EACd;EAEA,SAAS6C,cAAcA,CAAA,EAAG;IACzBnB,kBAAkB,CAAC,CAAC;IACpBR,WAAW,CAAEO,MAAM,CAAClB,OAAQ,CAAC;EAC9B;EAEA,MAAMuC,QAAQ,GAAG,IAAA3C,eAAM,EAAE,KAAM,CAAC;;EAEhC;EACA,IAAA4C,wBAAe,EAAE,MAAM;IACtB,IAAKD,QAAQ,CAACvC,OAAO,IAAI1B,KAAK,KAAK2C,MAAM,CAACjB,OAAO,EAAG;MACnDsC,cAAc,CAAC,CAAC;MAChB7C,WAAW,CAAC,CAAC;IACd;EACD,CAAC,EAAE,CAAEnB,KAAK,CAAG,CAAC;;EAEd;EACA,IAAAkE,wBAAe,EAAE,MAAM;IACtB,IAAK,CAAEb,kBAAkB,CAAC3B,OAAO,EAAG;MACnC;IACD;IAEA,IAAKL,GAAG,CAACK,OAAO,CAACF,aAAa,CAAC2C,aAAa,KAAK9C,GAAG,CAACK,OAAO,EAAG;MAC9DL,GAAG,CAACK,OAAO,CAAC0C,KAAK,CAAC,CAAC;IACpB;IAEA/B,WAAW,CAAEO,MAAM,CAAClB,OAAQ,CAAC;IAC7B2B,kBAAkB,CAAC3B,OAAO,GAAG,KAAK;EACnC,CAAC,EAAE,CAAE2B,kBAAkB,CAAC3B,OAAO,CAAG,CAAC;EAEnC,MAAM2C,UAAU,GAAG,IAAAC,qBAAY,EAAE,CAChCjD,GAAG,EACH,IAAAkD,gCAAe,EAAC,CAAC,EACjB,IAAAC,kCAAgB,EAAE;IAAE5B;EAAO,CAAE,CAAC,EAC9B,IAAA6B,8BAAc,EAAE;IAAE7B,MAAM;IAAEpC,YAAY;IAAEJ;EAAmB,CAAE,CAAC,EAC9D,IAAAsE,gCAAe,EAAC,CAAC,EACjB,IAAAC,wCAAmB,EAAE;IAAE/B,MAAM;IAAEP;EAAY,CAAE,CAAC,EAC9C,IAAAuC,oBAAS,EAAE;IACVrD,YAAY;IACZmC,YAAY;IACZlD;EACD,CAAE,CAAC,EACH,IAAAqE,0CAAoB,EAAE;IACrBjC,MAAM;IACNP,WAAW;IACXd,YAAY;IACZmC,YAAY;IACZ9C,UAAU;IACVP;EACD,CAAE,CAAC,EACH,IAAAyE,kDAAwB,EAAC,CAAC,EAC1B,IAAAC,qBAAY,EAAE,MAAM;IACnBf,cAAc,CAAC,CAAC;IAChBC,QAAQ,CAACvC,OAAO,GAAG,IAAI;EACxB,CAAC,EAAE,CAAEvB,WAAW,EAAE,GAAGU,sBAAsB,CAAG,CAAC,CAC9C,CAAC;EAEH,OAAO;IACNb,KAAK,EAAE4C,MAAM,CAAClB,OAAO;IACrB;IACA;IACA;IACA;IACA;IACAsD,QAAQ,EAAEA,CAAA,KAAMpC,MAAM,CAAClB,OAAO;IAC9BpB,QAAQ,EAAEoD,YAAY;IACtBrC,GAAG,EAAEgD;EACN,CAAC;AACF;AAEe,SAASY,sBAAsBA,CAAA,EAAG,CAAC"}
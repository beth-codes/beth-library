{"version":3,"names":["LINE_SEPARATOR","isCollapsed","remove","removeLineSeparator","value","backward","replacements","text","start","end","collapsed","index","removeStart","removeEnd","newValue","length","newReplacements","slice"],"sources":["@wordpress/rich-text/src/remove-line-separator.js"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { isCollapsed } from './is-collapsed';\nimport { remove } from './remove';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Removes a line separator character, if existing, from a Rich Text value at\n * the current indices. If no line separator exists on the indices it will\n * return undefined.\n *\n * @param {RichTextValue} value    Value to modify.\n * @param {boolean}       backward Indicates if are removing from the start\n *                                 index or the end index.\n *\n * @return {RichTextValue|undefined} A new value with the line separator\n *                                   removed. Or undefined if no line separator\n *                                   is found on the position.\n */\nexport function removeLineSeparator( value, backward = true ) {\n\tconst { replacements, text, start, end } = value;\n\tconst collapsed = isCollapsed( value );\n\tlet index = start - 1;\n\tlet removeStart = collapsed ? start - 1 : start;\n\tlet removeEnd = end;\n\tif ( ! backward ) {\n\t\tindex = end;\n\t\tremoveStart = start;\n\t\tremoveEnd = collapsed ? end + 1 : end;\n\t}\n\n\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\treturn;\n\t}\n\n\tlet newValue;\n\t// If the line separator that is about te be removed\n\t// contains wrappers, remove the wrappers first.\n\tif ( collapsed && replacements[ index ] && replacements[ index ].length ) {\n\t\tconst newReplacements = replacements.slice();\n\n\t\tnewReplacements[ index ] = replacements[ index ].slice( 0, -1 );\n\t\tnewValue = {\n\t\t\t...value,\n\t\t\treplacements: newReplacements,\n\t\t};\n\t} else {\n\t\tnewValue = remove( value, removeStart, removeEnd );\n\t}\n\treturn newValue;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,UAAU;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAAEC,KAAK,EAAEC,QAAQ,GAAG,IAAI,EAAG;EAC7D,MAAM;IAAEC,YAAY;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGL,KAAK;EAChD,MAAMM,SAAS,GAAGT,WAAW,CAAEG,KAAM,CAAC;EACtC,IAAIO,KAAK,GAAGH,KAAK,GAAG,CAAC;EACrB,IAAII,WAAW,GAAGF,SAAS,GAAGF,KAAK,GAAG,CAAC,GAAGA,KAAK;EAC/C,IAAIK,SAAS,GAAGJ,GAAG;EACnB,IAAK,CAAEJ,QAAQ,EAAG;IACjBM,KAAK,GAAGF,GAAG;IACXG,WAAW,GAAGJ,KAAK;IACnBK,SAAS,GAAGH,SAAS,GAAGD,GAAG,GAAG,CAAC,GAAGA,GAAG;EACtC;EAEA,IAAKF,IAAI,CAAEI,KAAK,CAAE,KAAKX,cAAc,EAAG;IACvC;EACD;EAEA,IAAIc,QAAQ;EACZ;EACA;EACA,IAAKJ,SAAS,IAAIJ,YAAY,CAAEK,KAAK,CAAE,IAAIL,YAAY,CAAEK,KAAK,CAAE,CAACI,MAAM,EAAG;IACzE,MAAMC,eAAe,GAAGV,YAAY,CAACW,KAAK,CAAC,CAAC;IAE5CD,eAAe,CAAEL,KAAK,CAAE,GAAGL,YAAY,CAAEK,KAAK,CAAE,CAACM,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;IAC/DH,QAAQ,GAAG;MACV,GAAGV,KAAK;MACRE,YAAY,EAAEU;IACf,CAAC;EACF,CAAC,MAAM;IACNF,QAAQ,GAAGZ,MAAM,CAAEE,KAAK,EAAEQ,WAAW,EAAEC,SAAU,CAAC;EACnD;EACA,OAAOC,QAAQ;AAChB"}
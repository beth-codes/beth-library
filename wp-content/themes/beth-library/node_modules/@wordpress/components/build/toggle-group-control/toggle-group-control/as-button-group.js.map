{"version":3,"names":["_element","require","_compose","_view","_toggleGroupControlBackdrop","_interopRequireDefault","_context","_hooks","UnforwardedToggleGroupControlAsButtonGroup","children","isAdaptiveWidth","label","onChange","size","value","otherProps","forwardedRef","containerRef","useRef","resizeListener","sizes","useResizeObserver","baseId","useInstanceId","ToggleGroupControlAsButtonGroup","toString","selectedValue","setSelectedValue","useState","groupContext","state","setState","previousValue","usePrevious","useUpdateEffect","createElement","default","Provider","isBlock","isDeselectable","View","ref","useMergeRefs","role","containerWidth","width","forwardRef","exports"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control/as-button-group.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseMergeRefs,\n\tuseInstanceId,\n\tusePrevious,\n\tuseResizeObserver,\n} from '@wordpress/compose';\nimport { forwardRef, useRef, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { View } from '../../view';\nimport ToggleGroupControlBackdrop from './toggle-group-control-backdrop';\nimport ToggleGroupControlContext from '../context';\nimport { useUpdateEffect } from '../../utils/hooks';\nimport type { WordPressComponentProps } from '../../ui/context';\nimport type { ToggleGroupControlMainControlProps } from '../types';\n\nfunction UnforwardedToggleGroupControlAsButtonGroup(\n\t{\n\t\tchildren,\n\t\tisAdaptiveWidth,\n\t\tlabel,\n\t\tonChange,\n\t\tsize,\n\t\tvalue,\n\t\t...otherProps\n\t}: WordPressComponentProps<\n\t\tToggleGroupControlMainControlProps,\n\t\t'div',\n\t\tfalse\n\t>,\n\tforwardedRef: ForwardedRef< HTMLDivElement >\n) {\n\tconst containerRef = useRef();\n\tconst [ resizeListener, sizes ] = useResizeObserver();\n\tconst baseId = useInstanceId(\n\t\tToggleGroupControlAsButtonGroup,\n\t\t'toggle-group-control-as-button-group'\n\t).toString();\n\tconst [ selectedValue, setSelectedValue ] = useState( value );\n\tconst groupContext = {\n\t\tbaseId,\n\t\tstate: selectedValue,\n\t\tsetState: setSelectedValue,\n\t};\n\tconst previousValue = usePrevious( value );\n\n\t// Propagate groupContext.state change.\n\tuseUpdateEffect( () => {\n\t\t// Avoid calling onChange if groupContext state changed\n\t\t// from incoming value.\n\t\tif ( previousValue !== groupContext.state ) {\n\t\t\tonChange( groupContext.state );\n\t\t}\n\t}, [ groupContext.state ] );\n\n\t// Sync incoming value with groupContext.state.\n\tuseUpdateEffect( () => {\n\t\tif ( value !== groupContext.state ) {\n\t\t\tgroupContext.setState( value );\n\t\t}\n\t}, [ value ] );\n\n\treturn (\n\t\t<ToggleGroupControlContext.Provider\n\t\t\tvalue={ {\n\t\t\t\t...groupContext,\n\t\t\t\tisBlock: ! isAdaptiveWidth,\n\t\t\t\tisDeselectable: true,\n\t\t\t\tsize,\n\t\t\t} }\n\t\t>\n\t\t\t<View\n\t\t\t\taria-label={ label }\n\t\t\t\t{ ...otherProps }\n\t\t\t\tref={ useMergeRefs( [ containerRef, forwardedRef ] ) }\n\t\t\t\trole=\"group\"\n\t\t\t>\n\t\t\t\t{ resizeListener }\n\t\t\t\t<ToggleGroupControlBackdrop\n\t\t\t\t\tstate={ groupContext.state }\n\t\t\t\t\tcontainerRef={ containerRef }\n\t\t\t\t\tcontainerWidth={ sizes.width }\n\t\t\t\t\tisAdaptiveWidth={ isAdaptiveWidth }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</View>\n\t\t</ToggleGroupControlContext.Provider>\n\t);\n}\n\nexport const ToggleGroupControlAsButtonGroup = forwardRef(\n\tUnforwardedToggleGroupControlAsButtonGroup\n);\n"],"mappings":";;;;;;;AAcA,IAAAA,QAAA,GAAAC,OAAA;AANA,IAAAC,QAAA,GAAAD,OAAA;AAWA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,2BAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,QAAA,GAAAD,sBAAA,CAAAJ,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAtBA;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;;AAQA,SAASO,0CAA0CA,CAClD;EACCC,QAAQ;EACRC,eAAe;EACfC,KAAK;EACLC,QAAQ;EACRC,IAAI;EACJC,KAAK;EACL,GAAGC;AAKJ,CAAC,EACDC,YAA4C,EAC3C;EACD,MAAMC,YAAY,GAAG,IAAAC,eAAM,EAAC,CAAC;EAC7B,MAAM,CAAEC,cAAc,EAAEC,KAAK,CAAE,GAAG,IAAAC,0BAAiB,EAAC,CAAC;EACrD,MAAMC,MAAM,GAAG,IAAAC,sBAAa,EAC3BC,+BAA+B,EAC/B,sCACD,CAAC,CAACC,QAAQ,CAAC,CAAC;EACZ,MAAM,CAAEC,aAAa,EAAEC,gBAAgB,CAAE,GAAG,IAAAC,iBAAQ,EAAEd,KAAM,CAAC;EAC7D,MAAMe,YAAY,GAAG;IACpBP,MAAM;IACNQ,KAAK,EAAEJ,aAAa;IACpBK,QAAQ,EAAEJ;EACX,CAAC;EACD,MAAMK,aAAa,GAAG,IAAAC,oBAAW,EAAEnB,KAAM,CAAC;;EAE1C;EACA,IAAAoB,sBAAe,EAAE,MAAM;IACtB;IACA;IACA,IAAKF,aAAa,KAAKH,YAAY,CAACC,KAAK,EAAG;MAC3ClB,QAAQ,CAAEiB,YAAY,CAACC,KAAM,CAAC;IAC/B;EACD,CAAC,EAAE,CAAED,YAAY,CAACC,KAAK,CAAG,CAAC;;EAE3B;EACA,IAAAI,sBAAe,EAAE,MAAM;IACtB,IAAKpB,KAAK,KAAKe,YAAY,CAACC,KAAK,EAAG;MACnCD,YAAY,CAACE,QAAQ,CAAEjB,KAAM,CAAC;IAC/B;EACD,CAAC,EAAE,CAAEA,KAAK,CAAG,CAAC;EAEd,OACC,IAAAd,QAAA,CAAAmC,aAAA,EAAC7B,QAAA,CAAA8B,OAAyB,CAACC,QAAQ;IAClCvB,KAAK,EAAG;MACP,GAAGe,YAAY;MACfS,OAAO,EAAE,CAAE5B,eAAe;MAC1B6B,cAAc,EAAE,IAAI;MACpB1B;IACD;EAAG,GAEH,IAAAb,QAAA,CAAAmC,aAAA,EAAChC,KAAA,CAAAqC,IAAI;IACJ,cAAa7B,KAAO;IAAA,GACfI,UAAU;IACf0B,GAAG,EAAG,IAAAC,qBAAY,EAAE,CAAEzB,YAAY,EAAED,YAAY,CAAG,CAAG;IACtD2B,IAAI,EAAC;EAAO,GAEVxB,cAAc,EAChB,IAAAnB,QAAA,CAAAmC,aAAA,EAAC/B,2BAAA,CAAAgC,OAA0B;IAC1BN,KAAK,EAAGD,YAAY,CAACC,KAAO;IAC5Bb,YAAY,EAAGA,YAAc;IAC7B2B,cAAc,EAAGxB,KAAK,CAACyB,KAAO;IAC9BnC,eAAe,EAAGA;EAAiB,CACnC,CAAC,EACAD,QACG,CAC6B,CAAC;AAEvC;AAEO,MAAMe,+BAA+B,GAAG,IAAAsB,mBAAU,EACxDtC,0CACD,CAAC;AAACuC,OAAA,CAAAvB,+BAAA,GAAAA,+BAAA"}
{"version":3,"names":["useMergeRefs","useInstanceId","usePrevious","useResizeObserver","forwardRef","useRef","useState","View","ToggleGroupControlBackdrop","ToggleGroupControlContext","useUpdateEffect","UnforwardedToggleGroupControlAsButtonGroup","children","isAdaptiveWidth","label","onChange","size","value","otherProps","forwardedRef","containerRef","resizeListener","sizes","baseId","ToggleGroupControlAsButtonGroup","toString","selectedValue","setSelectedValue","groupContext","state","setState","previousValue","createElement","Provider","isBlock","isDeselectable","ref","role","containerWidth","width"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control/as-button-group.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseMergeRefs,\n\tuseInstanceId,\n\tusePrevious,\n\tuseResizeObserver,\n} from '@wordpress/compose';\nimport { forwardRef, useRef, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { View } from '../../view';\nimport ToggleGroupControlBackdrop from './toggle-group-control-backdrop';\nimport ToggleGroupControlContext from '../context';\nimport { useUpdateEffect } from '../../utils/hooks';\nimport type { WordPressComponentProps } from '../../ui/context';\nimport type { ToggleGroupControlMainControlProps } from '../types';\n\nfunction UnforwardedToggleGroupControlAsButtonGroup(\n\t{\n\t\tchildren,\n\t\tisAdaptiveWidth,\n\t\tlabel,\n\t\tonChange,\n\t\tsize,\n\t\tvalue,\n\t\t...otherProps\n\t}: WordPressComponentProps<\n\t\tToggleGroupControlMainControlProps,\n\t\t'div',\n\t\tfalse\n\t>,\n\tforwardedRef: ForwardedRef< HTMLDivElement >\n) {\n\tconst containerRef = useRef();\n\tconst [ resizeListener, sizes ] = useResizeObserver();\n\tconst baseId = useInstanceId(\n\t\tToggleGroupControlAsButtonGroup,\n\t\t'toggle-group-control-as-button-group'\n\t).toString();\n\tconst [ selectedValue, setSelectedValue ] = useState( value );\n\tconst groupContext = {\n\t\tbaseId,\n\t\tstate: selectedValue,\n\t\tsetState: setSelectedValue,\n\t};\n\tconst previousValue = usePrevious( value );\n\n\t// Propagate groupContext.state change.\n\tuseUpdateEffect( () => {\n\t\t// Avoid calling onChange if groupContext state changed\n\t\t// from incoming value.\n\t\tif ( previousValue !== groupContext.state ) {\n\t\t\tonChange( groupContext.state );\n\t\t}\n\t}, [ groupContext.state ] );\n\n\t// Sync incoming value with groupContext.state.\n\tuseUpdateEffect( () => {\n\t\tif ( value !== groupContext.state ) {\n\t\t\tgroupContext.setState( value );\n\t\t}\n\t}, [ value ] );\n\n\treturn (\n\t\t<ToggleGroupControlContext.Provider\n\t\t\tvalue={ {\n\t\t\t\t...groupContext,\n\t\t\t\tisBlock: ! isAdaptiveWidth,\n\t\t\t\tisDeselectable: true,\n\t\t\t\tsize,\n\t\t\t} }\n\t\t>\n\t\t\t<View\n\t\t\t\taria-label={ label }\n\t\t\t\t{ ...otherProps }\n\t\t\t\tref={ useMergeRefs( [ containerRef, forwardedRef ] ) }\n\t\t\t\trole=\"group\"\n\t\t\t>\n\t\t\t\t{ resizeListener }\n\t\t\t\t<ToggleGroupControlBackdrop\n\t\t\t\t\tstate={ groupContext.state }\n\t\t\t\t\tcontainerRef={ containerRef }\n\t\t\t\t\tcontainerWidth={ sizes.width }\n\t\t\t\t\tisAdaptiveWidth={ isAdaptiveWidth }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</View>\n\t\t</ToggleGroupControlContext.Provider>\n\t);\n}\n\nexport const ToggleGroupControlAsButtonGroup = forwardRef(\n\tUnforwardedToggleGroupControlAsButtonGroup\n);\n"],"mappings":";AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA,SACCA,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,iBAAiB,QACX,oBAAoB;AAC3B,SAASC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;;AAEjE;AACA;AACA;AACA,SAASC,IAAI,QAAQ,YAAY;AACjC,OAAOC,0BAA0B,MAAM,iCAAiC;AACxE,OAAOC,yBAAyB,MAAM,YAAY;AAClD,SAASC,eAAe,QAAQ,mBAAmB;AAInD,SAASC,0CAA0CA,CAClD;EACCC,QAAQ;EACRC,eAAe;EACfC,KAAK;EACLC,QAAQ;EACRC,IAAI;EACJC,KAAK;EACL,GAAGC;AAKJ,CAAC,EACDC,YAA4C,EAC3C;EACD,MAAMC,YAAY,GAAGf,MAAM,CAAC,CAAC;EAC7B,MAAM,CAAEgB,cAAc,EAAEC,KAAK,CAAE,GAAGnB,iBAAiB,CAAC,CAAC;EACrD,MAAMoB,MAAM,GAAGtB,aAAa,CAC3BuB,+BAA+B,EAC/B,sCACD,CAAC,CAACC,QAAQ,CAAC,CAAC;EACZ,MAAM,CAAEC,aAAa,EAAEC,gBAAgB,CAAE,GAAGrB,QAAQ,CAAEW,KAAM,CAAC;EAC7D,MAAMW,YAAY,GAAG;IACpBL,MAAM;IACNM,KAAK,EAAEH,aAAa;IACpBI,QAAQ,EAAEH;EACX,CAAC;EACD,MAAMI,aAAa,GAAG7B,WAAW,CAAEe,KAAM,CAAC;;EAE1C;EACAP,eAAe,CAAE,MAAM;IACtB;IACA;IACA,IAAKqB,aAAa,KAAKH,YAAY,CAACC,KAAK,EAAG;MAC3Cd,QAAQ,CAAEa,YAAY,CAACC,KAAM,CAAC;IAC/B;EACD,CAAC,EAAE,CAAED,YAAY,CAACC,KAAK,CAAG,CAAC;;EAE3B;EACAnB,eAAe,CAAE,MAAM;IACtB,IAAKO,KAAK,KAAKW,YAAY,CAACC,KAAK,EAAG;MACnCD,YAAY,CAACE,QAAQ,CAAEb,KAAM,CAAC;IAC/B;EACD,CAAC,EAAE,CAAEA,KAAK,CAAG,CAAC;EAEd,OACCe,aAAA,CAACvB,yBAAyB,CAACwB,QAAQ;IAClChB,KAAK,EAAG;MACP,GAAGW,YAAY;MACfM,OAAO,EAAE,CAAErB,eAAe;MAC1BsB,cAAc,EAAE,IAAI;MACpBnB;IACD;EAAG,GAEHgB,aAAA,CAACzB,IAAI;IACJ,cAAaO,KAAO;IAAA,GACfI,UAAU;IACfkB,GAAG,EAAGpC,YAAY,CAAE,CAAEoB,YAAY,EAAED,YAAY,CAAG,CAAG;IACtDkB,IAAI,EAAC;EAAO,GAEVhB,cAAc,EAChBW,aAAA,CAACxB,0BAA0B;IAC1BqB,KAAK,EAAGD,YAAY,CAACC,KAAO;IAC5BT,YAAY,EAAGA,YAAc;IAC7BkB,cAAc,EAAGhB,KAAK,CAACiB,KAAO;IAC9B1B,eAAe,EAAGA;EAAiB,CACnC,CAAC,EACAD,QACG,CAC6B,CAAC;AAEvC;AAEA,OAAO,MAAMY,+BAA+B,GAAGpB,UAAU,CACxDO,0CACD,CAAC"}
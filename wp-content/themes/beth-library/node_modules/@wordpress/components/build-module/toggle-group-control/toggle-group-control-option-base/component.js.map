{"version":3,"names":["Radio","useInstanceId","contextConnect","useContextSystem","useToggleGroupControlContext","styles","useCx","Tooltip","ButtonContentView","LabelView","WithToolTip","showTooltip","text","children","createElement","position","Fragment","ToggleGroupControlOptionBase","props","forwardedRef","toggleGroupControlContext","id","baseId","buttonProps","isBlock","isDeselectable","size","otherContextProps","className","isIcon","value","otherButtonProps","isPressed","state","cx","labelViewClasses","labelBlock","classes","buttonView","buttonOnClick","setState","undefined","commonProps","ref","type","onClick","as","ConnectedToggleGroupControlOptionBase"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control-option-base/component.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef } from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport { Radio } from 'reakit';\n\n/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport type { WordPressComponentProps } from '../../ui/context';\nimport { contextConnect, useContextSystem } from '../../ui/context';\nimport type {\n\tToggleGroupControlOptionBaseProps,\n\tWithToolTipProps,\n} from '../types';\nimport { useToggleGroupControlContext } from '../context';\nimport * as styles from './styles';\nimport { useCx } from '../../utils/hooks';\nimport Tooltip from '../../tooltip';\n\nconst { ButtonContentView, LabelView } = styles;\n\nconst WithToolTip = ( { showTooltip, text, children }: WithToolTipProps ) => {\n\tif ( showTooltip && text ) {\n\t\treturn (\n\t\t\t<Tooltip text={ text } position=\"top center\">\n\t\t\t\t{ children }\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn <>{ children }</>;\n};\n\nfunction ToggleGroupControlOptionBase(\n\tprops: WordPressComponentProps<\n\t\tToggleGroupControlOptionBaseProps,\n\t\t'button',\n\t\tfalse\n\t>,\n\tforwardedRef: ForwardedRef< any >\n) {\n\tconst toggleGroupControlContext = useToggleGroupControlContext();\n\tconst id = useInstanceId(\n\t\tToggleGroupControlOptionBase,\n\t\ttoggleGroupControlContext.baseId || 'toggle-group-control-option-base'\n\t) as string;\n\tconst buttonProps = useContextSystem(\n\t\t{ ...props, id },\n\t\t'ToggleGroupControlOptionBase'\n\t);\n\tconst {\n\t\tisBlock = false,\n\t\tisDeselectable = false,\n\t\tsize = 'default',\n\t\t...otherContextProps /* context props for Ariakit Radio */\n\t} = toggleGroupControlContext;\n\tconst {\n\t\tclassName,\n\t\tisIcon = false,\n\t\tvalue,\n\t\tchildren,\n\t\tshowTooltip = false,\n\t\t...otherButtonProps\n\t} = buttonProps;\n\n\tconst isPressed = otherContextProps.state === value;\n\tconst cx = useCx();\n\tconst labelViewClasses = cx( isBlock && styles.labelBlock );\n\tconst classes = cx(\n\t\tstyles.buttonView( { isDeselectable, isIcon, isPressed, size } ),\n\t\tclassName\n\t);\n\n\tconst buttonOnClick = () => {\n\t\tif ( isDeselectable && isPressed ) {\n\t\t\totherContextProps.setState( undefined );\n\t\t} else {\n\t\t\totherContextProps.setState( value );\n\t\t}\n\t};\n\n\tconst commonProps = {\n\t\t...otherButtonProps,\n\t\tclassName: classes,\n\t\t'data-value': value,\n\t\tref: forwardedRef,\n\t};\n\n\treturn (\n\t\t<LabelView className={ labelViewClasses }>\n\t\t\t<WithToolTip\n\t\t\t\tshowTooltip={ showTooltip }\n\t\t\t\ttext={ otherButtonProps[ 'aria-label' ] }\n\t\t\t>\n\t\t\t\t{ isDeselectable ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\t{ ...commonProps }\n\t\t\t\t\t\taria-pressed={ isPressed }\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={ buttonOnClick }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ButtonContentView>{ children }</ButtonContentView>\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<Radio\n\t\t\t\t\t\t{ ...commonProps }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...otherContextProps /* these are only for Ariakit Radio */\n\t\t\t\t\t\t}\n\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ButtonContentView>{ children }</ButtonContentView>\n\t\t\t\t\t</Radio>\n\t\t\t\t) }\n\t\t\t</WithToolTip>\n\t\t</LabelView>\n\t);\n}\n\n/**\n * `ToggleGroupControlOptionBase` is a form component and is meant to be used as an internal,\n * generic component for any children of `ToggleGroupControl`.\n *\n * @example\n * ```jsx\n * import {\n *   __experimentalToggleGroupControl as ToggleGroupControl,\n *   __experimentalToggleGroupControlOptionBase as ToggleGroupControlOptionBase,\n * } from '@wordpress/components';\n *\n * function Example() {\n *   return (\n *     <ToggleGroupControl label=\"my label\" value=\"vertical\" isBlock>\n *       <ToggleGroupControlOption value=\"horizontal\" label=\"Horizontal\" />\n *       <ToggleGroupControlOption value=\"vertical\" label=\"Vertical\" />\n *     </ToggleGroupControl>\n *   );\n * }\n * ```\n */\nconst ConnectedToggleGroupControlOptionBase = contextConnect(\n\tToggleGroupControlOptionBase,\n\t'ToggleGroupControlOptionBase'\n);\n\nexport default ConnectedToggleGroupControlOptionBase;\n"],"mappings":"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"}
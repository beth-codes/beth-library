{"version":3,"names":["useContext","DropdownMenu","ToolbarContext","ToolbarItem","ToolbarGroupCollapsed","controls","toggleProps","props","accessibleToolbarState","renderDropdownMenu","internalToggleProps","createElement"],"sources":["@wordpress/components/src/toolbar/toolbar-group/toolbar-group-collapsed.js"],"sourcesContent":["// @ts-nocheck\n\n/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport DropdownMenu from '../../dropdown-menu';\nimport ToolbarContext from '../toolbar-context';\nimport ToolbarItem from '../toolbar-item';\n\nfunction ToolbarGroupCollapsed( { controls = [], toggleProps, ...props } ) {\n\t// It'll contain state if `ToolbarGroup` is being used within\n\t// `<Toolbar label=\"label\" />`\n\tconst accessibleToolbarState = useContext( ToolbarContext );\n\n\tconst renderDropdownMenu = ( internalToggleProps ) => (\n\t\t<DropdownMenu\n\t\t\tcontrols={ controls }\n\t\t\ttoggleProps={ {\n\t\t\t\t...internalToggleProps,\n\t\t\t\t'data-toolbar-item': true,\n\t\t\t} }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n\n\tif ( accessibleToolbarState ) {\n\t\treturn (\n\t\t\t<ToolbarItem { ...toggleProps }>{ renderDropdownMenu }</ToolbarItem>\n\t\t);\n\t}\n\n\treturn renderDropdownMenu( toggleProps );\n}\n\nexport default ToolbarGroupCollapsed;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,oBAAoB;;AAE/C;AACA;AACA;AACA,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,WAAW,MAAM,iBAAiB;AAEzC,SAASC,qBAAqBA,CAAE;EAAEC,QAAQ,GAAG,EAAE;EAAEC,WAAW;EAAE,GAAGC;AAAM,CAAC,EAAG;EAC1E;EACA;EACA,MAAMC,sBAAsB,GAAGR,UAAU,CAAEE,cAAe,CAAC;EAE3D,MAAMO,kBAAkB,GAAKC,mBAAmB,IAC/CC,aAAA,CAACV,YAAY;IACZI,QAAQ,EAAGA,QAAU;IACrBC,WAAW,EAAG;MACb,GAAGI,mBAAmB;MACtB,mBAAmB,EAAE;IACtB,CAAG;IAAA,GACEH;EAAK,CACV,CACD;EAED,IAAKC,sBAAsB,EAAG;IAC7B,OACCG,aAAA,CAACR,WAAW;MAAA,GAAMG;IAAW,GAAKG,kBAAiC,CAAC;EAEtE;EAEA,OAAOA,kBAAkB,CAAEH,WAAY,CAAC;AACzC;AAEA,eAAeF,qBAAqB"}
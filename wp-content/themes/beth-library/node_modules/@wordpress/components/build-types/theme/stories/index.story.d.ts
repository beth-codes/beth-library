/// <reference types="react" />
/**
 * External dependencies
 */
import type { ComponentMeta, ComponentStory } from '@storybook/react';
/**
 * Internal dependencies
 */
import Theme from '../index';
declare const meta: ComponentMeta<typeof Theme>;
export default meta;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, import("../types").ThemeInputValues & {
    children?: import("react").ReactNode;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "as" | keyof import("../types").ThemeInputValues> & {
    as?: keyof JSX.IntrinsicElements | undefined;
}>;
export declare const Nested: ComponentStory<typeof Theme>;
/**
 * The rest of the required colors are generated based on the given accent and background colors.
 */
export declare const ColorScheme: ComponentStory<typeof Theme>;
//# sourceMappingURL=index.story.d.ts.map
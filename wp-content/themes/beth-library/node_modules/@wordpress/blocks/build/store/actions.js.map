{"version":3,"names":["_isPlainObject","require","_deprecated","_interopRequireDefault","_hooks","_utils","_constants","error","warn","window","console","LEGACY_CATEGORY_MAPPING","common","formatting","layout","isFunction","maybeFunc","processBlockType","blockType","select","name","settings","applyFilters","description","deprecated","since","map","deprecation","Object","fromEntries","entries","omit","DEPRECATED_ENTRY_KEYS","filter","key","includes","isPlainObject","save","edit","hasOwnProperty","category","getCategories","some","slug","title","icon","normalizeIconObject","isValidIcon","src","addBlockTypes","blockTypes","type","Array","isArray","__experimentalRegisterBlockType","dispatch","processedBlockType","exports","__experimentalReapplyBlockTypeFilters","unprocessedBlockTypes","__experimentalGetUnprocessedBlockTypes","processedBlockTypes","keys","reduce","accumulator","blockName","result","push","length","removeBlockTypes","names","addBlockStyles","styles","removeBlockStyles","styleNames","addBlockVariations","variations","removeBlockVariations","variationNames","setDefaultBlockName","setFreeformFallbackBlockName","setUnregisteredFallbackBlockName","setGroupingBlockName","setCategories","categories","updateCategory","addBlockCollection","namespace","removeBlockCollection"],"sources":["@wordpress/blocks/src/store/actions.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { isPlainObject } from 'is-plain-object';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { applyFilters } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { isValidIcon, normalizeIconObject, omit } from '../api/utils';\nimport { DEPRECATED_ENTRY_KEYS } from '../api/constants';\n\n/** @typedef {import('../api/registration').WPBlockVariation} WPBlockVariation */\n/** @typedef {import('../api/registration').WPBlockType} WPBlockType */\n/** @typedef {import('./reducer').WPBlockCategory} WPBlockCategory */\n\nconst { error, warn } = window.console;\n\n/**\n * Mapping of legacy category slugs to their latest normal values, used to\n * accommodate updates of the default set of block categories.\n *\n * @type {Record<string,string>}\n */\nconst LEGACY_CATEGORY_MAPPING = {\n\tcommon: 'text',\n\tformatting: 'text',\n\tlayout: 'design',\n};\n\n/**\n * Whether the argument is a function.\n *\n * @param {*} maybeFunc The argument to check.\n * @return {boolean} True if the argument is a function, false otherwise.\n */\nfunction isFunction( maybeFunc ) {\n\treturn typeof maybeFunc === 'function';\n}\n\n/**\n * Takes the unprocessed block type data and applies all the existing filters for the registered block type.\n * Next, it validates all the settings and performs additional processing to the block type definition.\n *\n * @param {WPBlockType} blockType        Unprocessed block type settings.\n * @param {Object}      thunkArgs        Argument object for the thunk middleware.\n * @param {Function}    thunkArgs.select Function to select from the store.\n *\n * @return {WPBlockType | undefined} The block, if it has been successfully registered; otherwise `undefined`.\n */\nconst processBlockType = ( blockType, { select } ) => {\n\tconst { name } = blockType;\n\n\tconst settings = applyFilters(\n\t\t'blocks.registerBlockType',\n\t\t{ ...blockType },\n\t\tname,\n\t\tnull\n\t);\n\n\tif ( settings.description && typeof settings.description !== 'string' ) {\n\t\tdeprecated( 'Declaring non-string block descriptions', {\n\t\t\tsince: '6.2',\n\t\t} );\n\t}\n\n\tif ( settings.deprecated ) {\n\t\tsettings.deprecated = settings.deprecated.map( ( deprecation ) =>\n\t\t\tObject.fromEntries(\n\t\t\t\tObject.entries(\n\t\t\t\t\t// Only keep valid deprecation keys.\n\t\t\t\t\tapplyFilters(\n\t\t\t\t\t\t'blocks.registerBlockType',\n\t\t\t\t\t\t// Merge deprecation keys with pre-filter settings\n\t\t\t\t\t\t// so that filters that depend on specific keys being\n\t\t\t\t\t\t// present don't fail.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Omit deprecation keys here so that deprecations\n\t\t\t\t\t\t\t// can opt out of specific keys like \"supports\".\n\t\t\t\t\t\t\t...omit( blockType, DEPRECATED_ENTRY_KEYS ),\n\t\t\t\t\t\t\t...deprecation,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tdeprecation\n\t\t\t\t\t)\n\t\t\t\t).filter( ( [ key ] ) => DEPRECATED_ENTRY_KEYS.includes( key ) )\n\t\t\t)\n\t\t);\n\t}\n\n\tif ( ! isPlainObject( settings ) ) {\n\t\terror( 'Block settings must be a valid object.' );\n\t\treturn;\n\t}\n\n\tif ( ! isFunction( settings.save ) ) {\n\t\terror( 'The \"save\" property must be a valid function.' );\n\t\treturn;\n\t}\n\tif ( 'edit' in settings && ! isFunction( settings.edit ) ) {\n\t\terror( 'The \"edit\" property must be a valid function.' );\n\t\treturn;\n\t}\n\n\t// Canonicalize legacy categories to equivalent fallback.\n\tif ( LEGACY_CATEGORY_MAPPING.hasOwnProperty( settings.category ) ) {\n\t\tsettings.category = LEGACY_CATEGORY_MAPPING[ settings.category ];\n\t}\n\n\tif (\n\t\t'category' in settings &&\n\t\t! select\n\t\t\t.getCategories()\n\t\t\t.some( ( { slug } ) => slug === settings.category )\n\t) {\n\t\twarn(\n\t\t\t'The block \"' +\n\t\t\t\tname +\n\t\t\t\t'\" is registered with an invalid category \"' +\n\t\t\t\tsettings.category +\n\t\t\t\t'\".'\n\t\t);\n\t\tdelete settings.category;\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\terror( 'The block \"' + name + '\" must have a title.' );\n\t\treturn;\n\t}\n\tif ( typeof settings.title !== 'string' ) {\n\t\terror( 'Block titles must be strings.' );\n\t\treturn;\n\t}\n\n\tsettings.icon = normalizeIconObject( settings.icon );\n\tif ( ! isValidIcon( settings.icon.src ) ) {\n\t\terror(\n\t\t\t'The icon passed is invalid. ' +\n\t\t\t\t'The icon should be a string, an element, a function, or an object following the specifications documented in https://developer.wordpress.org/block-editor/developers/block-api/block-registration/#icon-optional'\n\t\t);\n\t\treturn;\n\t}\n\n\treturn settings;\n};\n\n/**\n * Returns an action object used in signalling that block types have been added.\n * Ignored from documentation as the recommended usage for this action through registerBlockType from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {WPBlockType|WPBlockType[]} blockTypes Object or array of objects representing blocks to added.\n *\n *\n * @return {Object} Action object.\n */\nexport function addBlockTypes( blockTypes ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_TYPES',\n\t\tblockTypes: Array.isArray( blockTypes ) ? blockTypes : [ blockTypes ],\n\t};\n}\n\n/**\n * Signals that the passed block type's settings should be stored in the state.\n *\n * @param {WPBlockType} blockType Unprocessed block type settings.\n */\nexport const __experimentalRegisterBlockType =\n\t( blockType ) =>\n\t( { dispatch, select } ) => {\n\t\tdispatch( {\n\t\t\ttype: 'ADD_UNPROCESSED_BLOCK_TYPE',\n\t\t\tblockType,\n\t\t} );\n\n\t\tconst processedBlockType = processBlockType( blockType, { select } );\n\t\tif ( ! processedBlockType ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch.addBlockTypes( processedBlockType );\n\t};\n\n/**\n * Signals that all block types should be computed again.\n * It uses stored unprocessed block types and all the most recent list of registered filters.\n *\n * It addresses the issue where third party block filters get registered after third party blocks. A sample sequence:\n *   1. Filter A.\n *   2. Block B.\n *   3. Block C.\n *   4. Filter D.\n *   5. Filter E.\n *   6. Block F.\n *   7. Filter G.\n * In this scenario some filters would not get applied for all blocks because they are registered too late.\n */\nexport const __experimentalReapplyBlockTypeFilters =\n\t() =>\n\t( { dispatch, select } ) => {\n\t\tconst unprocessedBlockTypes =\n\t\t\tselect.__experimentalGetUnprocessedBlockTypes();\n\n\t\tconst processedBlockTypes = Object.keys( unprocessedBlockTypes ).reduce(\n\t\t\t( accumulator, blockName ) => {\n\t\t\t\tconst result = processBlockType(\n\t\t\t\t\tunprocessedBlockTypes[ blockName ],\n\t\t\t\t\t{ select }\n\t\t\t\t);\n\t\t\t\tif ( result ) {\n\t\t\t\t\taccumulator.push( result );\n\t\t\t\t}\n\t\t\t\treturn accumulator;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\tif ( ! processedBlockTypes.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch.addBlockTypes( processedBlockTypes );\n\t};\n\n/**\n * Returns an action object used to remove a registered block type.\n * Ignored from documentation as the recommended usage for this action through unregisterBlockType from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string|string[]} names Block name or array of block names to be removed.\n *\n *\n * @return {Object} Action object.\n */\nexport function removeBlockTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_TYPES',\n\t\tnames: Array.isArray( names ) ? names : [ names ],\n\t};\n}\n\n/**\n * Returns an action object used in signalling that new block styles have been added.\n * Ignored from documentation as the recommended usage for this action through registerBlockStyle from @wordpress/blocks.\n *\n * @param {string}       blockName Block name.\n * @param {Array|Object} styles    Block style object or array of block style objects.\n *\n * @ignore\n *\n * @return {Object} Action object.\n */\nexport function addBlockStyles( blockName, styles ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_STYLES',\n\t\tstyles: Array.isArray( styles ) ? styles : [ styles ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block styles have been removed.\n * Ignored from documentation as the recommended usage for this action through unregisterBlockStyle from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string}       blockName  Block name.\n * @param {Array|string} styleNames Block style names or array of block style names.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockStyles( blockName, styleNames ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_STYLES',\n\t\tstyleNames: Array.isArray( styleNames ) ? styleNames : [ styleNames ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that new block variations have been added.\n * Ignored from documentation as the recommended usage for this action through registerBlockVariation from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string}                              blockName  Block name.\n * @param {WPBlockVariation|WPBlockVariation[]} variations Block variations.\n *\n * @return {Object} Action object.\n */\nexport function addBlockVariations( blockName, variations ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_VARIATIONS',\n\t\tvariations: Array.isArray( variations ) ? variations : [ variations ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block variations have been removed.\n * Ignored from documentation as the recommended usage for this action through unregisterBlockVariation from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string}          blockName      Block name.\n * @param {string|string[]} variationNames Block variation names.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockVariations( blockName, variationNames ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_VARIATIONS',\n\t\tvariationNames: Array.isArray( variationNames )\n\t\t\t? variationNames\n\t\t\t: [ variationNames ],\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used to set the default block name.\n * Ignored from documentation as the recommended usage for this action through setDefaultBlockName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setDefaultBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_DEFAULT_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used as a fallback\n * for non-block content.\n * Ignored from documentation as the recommended usage for this action through setFreeformContentHandlerName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setFreeformFallbackBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_FREEFORM_FALLBACK_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used as a fallback\n * for unregistered blocks.\n * Ignored from documentation as the recommended usage for this action through setUnregisteredTypeHandlerName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setUnregisteredFallbackBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_UNREGISTERED_FALLBACK_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used\n * when grouping other blocks\n * eg: in \"Group/Ungroup\" interactions\n * Ignored from documentation as the recommended usage for this action through setGroupingBlockName from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setGroupingBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_GROUPING_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set block categories.\n * Ignored from documentation as the recommended usage for this action through setCategories from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {WPBlockCategory[]} categories Block categories.\n *\n * @return {Object} Action object.\n */\nexport function setCategories( categories ) {\n\treturn {\n\t\ttype: 'SET_CATEGORIES',\n\t\tcategories,\n\t};\n}\n\n/**\n * Returns an action object used to update a category.\n * Ignored from documentation as the recommended usage for this action through updateCategory from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} slug     Block category slug.\n * @param {Object} category Object containing the category properties that should be updated.\n *\n * @return {Object} Action object.\n */\nexport function updateCategory( slug, category ) {\n\treturn {\n\t\ttype: 'UPDATE_CATEGORY',\n\t\tslug,\n\t\tcategory,\n\t};\n}\n\n/**\n * Returns an action object used to add block collections\n * Ignored from documentation as the recommended usage for this action through registerBlockCollection from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} namespace The namespace of the blocks to put in the collection\n * @param {string} title     The title to display in the block inserter\n * @param {Object} icon      (optional) The icon to display in the block inserter\n *\n * @return {Object} Action object.\n */\nexport function addBlockCollection( namespace, title, icon ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_COLLECTION',\n\t\tnamespace,\n\t\ttitle,\n\t\ticon,\n\t};\n}\n\n/**\n * Returns an action object used to remove block collections\n * Ignored from documentation as the recommended usage for this action through unregisterBlockCollection from @wordpress/blocks.\n *\n * @ignore\n *\n * @param {string} namespace The namespace of the blocks to put in the collection\n *\n * @return {Object} Action object.\n */\nexport function removeBlockCollection( namespace ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_COLLECTION',\n\t\tnamespace,\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,IAAAA,cAAA,GAAAC,OAAA;AAKA,IAAAC,WAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAKA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,UAAA,GAAAL,OAAA;AAfA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;AACA;AACA;;AAEA,MAAM;EAAEM,KAAK;EAAEC;AAAK,CAAC,GAAGC,MAAM,CAACC,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAG;EAC/BC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE,MAAM;EAClBC,MAAM,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAAEC,SAAS,EAAG;EAChC,OAAO,OAAOA,SAAS,KAAK,UAAU;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAAEC,SAAS,EAAE;EAAEC;AAAO,CAAC,KAAM;EACrD,MAAM;IAAEC;EAAK,CAAC,GAAGF,SAAS;EAE1B,MAAMG,QAAQ,GAAG,IAAAC,mBAAY,EAC5B,0BAA0B,EAC1B;IAAE,GAAGJ;EAAU,CAAC,EAChBE,IAAI,EACJ,IACD,CAAC;EAED,IAAKC,QAAQ,CAACE,WAAW,IAAI,OAAOF,QAAQ,CAACE,WAAW,KAAK,QAAQ,EAAG;IACvE,IAAAC,mBAAU,EAAE,yCAAyC,EAAE;MACtDC,KAAK,EAAE;IACR,CAAE,CAAC;EACJ;EAEA,IAAKJ,QAAQ,CAACG,UAAU,EAAG;IAC1BH,QAAQ,CAACG,UAAU,GAAGH,QAAQ,CAACG,UAAU,CAACE,GAAG,CAAIC,WAAW,IAC3DC,MAAM,CAACC,WAAW,CACjBD,MAAM,CAACE,OAAO;IACb;IACA,IAAAR,mBAAY,EACX,0BAA0B;IAC1B;IACA;IACA;IACA;MACC;MACA;MACA,GAAG,IAAAS,WAAI,EAAEb,SAAS,EAAEc,gCAAsB,CAAC;MAC3C,GAAGL;IACJ,CAAC,EACDP,IAAI,EACJO,WACD,CACD,CAAC,CAACM,MAAM,CAAE,CAAE,CAAEC,GAAG,CAAE,KAAMF,gCAAqB,CAACG,QAAQ,CAAED,GAAI,CAAE,CAChE,CACD,CAAC;EACF;EAEA,IAAK,CAAE,IAAAE,4BAAa,EAAEf,QAAS,CAAC,EAAG;IAClCd,KAAK,CAAE,wCAAyC,CAAC;IACjD;EACD;EAEA,IAAK,CAAEQ,UAAU,CAAEM,QAAQ,CAACgB,IAAK,CAAC,EAAG;IACpC9B,KAAK,CAAE,+CAAgD,CAAC;IACxD;EACD;EACA,IAAK,MAAM,IAAIc,QAAQ,IAAI,CAAEN,UAAU,CAAEM,QAAQ,CAACiB,IAAK,CAAC,EAAG;IAC1D/B,KAAK,CAAE,+CAAgD,CAAC;IACxD;EACD;;EAEA;EACA,IAAKI,uBAAuB,CAAC4B,cAAc,CAAElB,QAAQ,CAACmB,QAAS,CAAC,EAAG;IAClEnB,QAAQ,CAACmB,QAAQ,GAAG7B,uBAAuB,CAAEU,QAAQ,CAACmB,QAAQ,CAAE;EACjE;EAEA,IACC,UAAU,IAAInB,QAAQ,IACtB,CAAEF,MAAM,CACNsB,aAAa,CAAC,CAAC,CACfC,IAAI,CAAE,CAAE;IAAEC;EAAK,CAAC,KAAMA,IAAI,KAAKtB,QAAQ,CAACmB,QAAS,CAAC,EACnD;IACDhC,IAAI,CACH,aAAa,GACZY,IAAI,GACJ,4CAA4C,GAC5CC,QAAQ,CAACmB,QAAQ,GACjB,IACF,CAAC;IACD,OAAOnB,QAAQ,CAACmB,QAAQ;EACzB;EAEA,IAAK,EAAI,OAAO,IAAInB,QAAQ,CAAE,IAAIA,QAAQ,CAACuB,KAAK,KAAK,EAAE,EAAG;IACzDrC,KAAK,CAAE,aAAa,GAAGa,IAAI,GAAG,sBAAuB,CAAC;IACtD;EACD;EACA,IAAK,OAAOC,QAAQ,CAACuB,KAAK,KAAK,QAAQ,EAAG;IACzCrC,KAAK,CAAE,+BAAgC,CAAC;IACxC;EACD;EAEAc,QAAQ,CAACwB,IAAI,GAAG,IAAAC,0BAAmB,EAAEzB,QAAQ,CAACwB,IAAK,CAAC;EACpD,IAAK,CAAE,IAAAE,kBAAW,EAAE1B,QAAQ,CAACwB,IAAI,CAACG,GAAI,CAAC,EAAG;IACzCzC,KAAK,CACJ,8BAA8B,GAC7B,kNACF,CAAC;IACD;EACD;EAEA,OAAOc,QAAQ;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4B,aAAaA,CAAEC,UAAU,EAAG;EAC3C,OAAO;IACNC,IAAI,EAAE,iBAAiB;IACvBD,UAAU,EAAEE,KAAK,CAACC,OAAO,CAAEH,UAAW,CAAC,GAAGA,UAAU,GAAG,CAAEA,UAAU;EACpE,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMI,+BAA+B,GACzCpC,SAAS,IACX,CAAE;EAAEqC,QAAQ;EAAEpC;AAAO,CAAC,KAAM;EAC3BoC,QAAQ,CAAE;IACTJ,IAAI,EAAE,4BAA4B;IAClCjC;EACD,CAAE,CAAC;EAEH,MAAMsC,kBAAkB,GAAGvC,gBAAgB,CAAEC,SAAS,EAAE;IAAEC;EAAO,CAAE,CAAC;EACpE,IAAK,CAAEqC,kBAAkB,EAAG;IAC3B;EACD;EACAD,QAAQ,CAACN,aAAa,CAAEO,kBAAmB,CAAC;AAC7C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbAC,OAAA,CAAAH,+BAAA,GAAAA,+BAAA;AAcO,MAAMI,qCAAqC,GACjDA,CAAA,KACA,CAAE;EAAEH,QAAQ;EAAEpC;AAAO,CAAC,KAAM;EAC3B,MAAMwC,qBAAqB,GAC1BxC,MAAM,CAACyC,sCAAsC,CAAC,CAAC;EAEhD,MAAMC,mBAAmB,GAAGjC,MAAM,CAACkC,IAAI,CAAEH,qBAAsB,CAAC,CAACI,MAAM,CACtE,CAAEC,WAAW,EAAEC,SAAS,KAAM;IAC7B,MAAMC,MAAM,GAAGjD,gBAAgB,CAC9B0C,qBAAqB,CAAEM,SAAS,CAAE,EAClC;MAAE9C;IAAO,CACV,CAAC;IACD,IAAK+C,MAAM,EAAG;MACbF,WAAW,CAACG,IAAI,CAAED,MAAO,CAAC;IAC3B;IACA,OAAOF,WAAW;EACnB,CAAC,EACD,EACD,CAAC;EAED,IAAK,CAAEH,mBAAmB,CAACO,MAAM,EAAG;IACnC;EACD;EAEAb,QAAQ,CAACN,aAAa,CAAEY,mBAAoB,CAAC;AAC9C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVAJ,OAAA,CAAAC,qCAAA,GAAAA,qCAAA;AAWO,SAASW,gBAAgBA,CAAEC,KAAK,EAAG;EACzC,OAAO;IACNnB,IAAI,EAAE,oBAAoB;IAC1BmB,KAAK,EAAElB,KAAK,CAACC,OAAO,CAAEiB,KAAM,CAAC,GAAGA,KAAK,GAAG,CAAEA,KAAK;EAChD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAEN,SAAS,EAAEO,MAAM,EAAG;EACnD,OAAO;IACNrB,IAAI,EAAE,kBAAkB;IACxBqB,MAAM,EAAEpB,KAAK,CAACC,OAAO,CAAEmB,MAAO,CAAC,GAAGA,MAAM,GAAG,CAAEA,MAAM,CAAE;IACrDP;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASQ,iBAAiBA,CAAER,SAAS,EAAES,UAAU,EAAG;EAC1D,OAAO;IACNvB,IAAI,EAAE,qBAAqB;IAC3BuB,UAAU,EAAEtB,KAAK,CAACC,OAAO,CAAEqB,UAAW,CAAC,GAAGA,UAAU,GAAG,CAAEA,UAAU,CAAE;IACrET;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASU,kBAAkBA,CAAEV,SAAS,EAAEW,UAAU,EAAG;EAC3D,OAAO;IACNzB,IAAI,EAAE,sBAAsB;IAC5ByB,UAAU,EAAExB,KAAK,CAACC,OAAO,CAAEuB,UAAW,CAAC,GAAGA,UAAU,GAAG,CAAEA,UAAU,CAAE;IACrEX;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASY,qBAAqBA,CAAEZ,SAAS,EAAEa,cAAc,EAAG;EAClE,OAAO;IACN3B,IAAI,EAAE,yBAAyB;IAC/B2B,cAAc,EAAE1B,KAAK,CAACC,OAAO,CAAEyB,cAAe,CAAC,GAC5CA,cAAc,GACd,CAAEA,cAAc,CAAE;IACrBb;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASc,mBAAmBA,CAAE3D,IAAI,EAAG;EAC3C,OAAO;IACN+B,IAAI,EAAE,wBAAwB;IAC9B/B;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4D,4BAA4BA,CAAE5D,IAAI,EAAG;EACpD,OAAO;IACN+B,IAAI,EAAE,kCAAkC;IACxC/B;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6D,gCAAgCA,CAAE7D,IAAI,EAAG;EACxD,OAAO;IACN+B,IAAI,EAAE,sCAAsC;IAC5C/B;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8D,oBAAoBA,CAAE9D,IAAI,EAAG;EAC5C,OAAO;IACN+B,IAAI,EAAE,yBAAyB;IAC/B/B;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+D,aAAaA,CAAEC,UAAU,EAAG;EAC3C,OAAO;IACNjC,IAAI,EAAE,gBAAgB;IACtBiC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAE1C,IAAI,EAAEH,QAAQ,EAAG;EAChD,OAAO;IACNW,IAAI,EAAE,iBAAiB;IACvBR,IAAI;IACJH;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8C,kBAAkBA,CAAEC,SAAS,EAAE3C,KAAK,EAAEC,IAAI,EAAG;EAC5D,OAAO;IACNM,IAAI,EAAE,sBAAsB;IAC5BoC,SAAS;IACT3C,KAAK;IACLC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2C,qBAAqBA,CAAED,SAAS,EAAG;EAClD,OAAO;IACNpC,IAAI,EAAE,yBAAyB;IAC/BoC;EACD,CAAC;AACF"}
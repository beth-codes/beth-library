"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var _element = require("@wordpress/element");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
/**
 * WordPress dependencies
 */

function _default({
  onChange,
  value,
  behaviors
}) {
  const defaultBehaviors = {
    default: {
      value: 'default',
      label: (0, _i18n.__)('Default')
    },
    noBehaviors: {
      value: '',
      label: (0, _i18n.__)('No behaviors')
    }
  };
  const behaviorsOptions = Object.entries(behaviors).map(([behaviorName]) => ({
    value: behaviorName,
    // Capitalize the first letter of the behavior name.
    label: `${behaviorName.charAt(0).toUpperCase()}${behaviorName.slice(1).toLowerCase()}`
  }));
  const options = [...Object.values(defaultBehaviors), ...behaviorsOptions];
  const animations = [{
    value: 'zoom',
    label: (0, _i18n.__)('Zoom')
  }, {
    value: 'fade',
    label: (0, _i18n.__)('Fade')
  }];
  return (0, _element.createElement)("div", {
    style: {
      marginTop: '2rem'
    }
  }, (0, _element.createElement)(_components.SelectControl, {
    label: (0, _i18n.__)('Behaviors')
    // At the moment we are only supporting one behavior (Lightbox)
    ,
    value: value,
    options: options,
    onChange: onChange,
    hideCancelButton: true,
    size: "__unstable-large"
  }), value === 'lightbox' && (0, _element.createElement)(_components.SelectControl, {
    label: (0, _i18n.__)('Animation'),
    value: behaviors?.lightbox.animation ? behaviors?.lightbox.animation : '',
    options: animations,
    onChange: onChange,
    hideCancelButton: false,
    size: "__unstable-large"
  }));
}
//# sourceMappingURL=behaviors-panel.js.map
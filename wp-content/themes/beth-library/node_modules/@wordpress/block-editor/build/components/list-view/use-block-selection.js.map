{"version":3,"names":["_a11y","require","_i18n","_data","_element","_keycodes","_blocks","_store","_utils","useBlockSelection","clearSelectedBlock","multiSelect","selectBlock","useDispatch","blockEditorStore","getBlockName","getBlockParents","getBlockSelectionStart","getSelectedBlockClientIds","hasMultiSelection","hasSelectedBlock","useSelect","getBlockType","blocksStore","updateBlockSelection","useCallback","event","clientId","destinationClientId","focusPosition","shiftKey","preventDefault","isKeyPress","type","keyCode","UP","DOWN","HOME","END","selectedBlocks","clientIdWithParents","some","blockId","includes","startTarget","endTarget","startParents","endParents","start","end","getCommonDepthClientIds","updatedSelectedBlocks","length","selectionDiff","filter","label","title","sprintf","__","speak"],"sources":["@wordpress/block-editor/src/components/list-view/use-block-selection.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useCallback } from '@wordpress/element';\nimport { UP, DOWN, HOME, END } from '@wordpress/keycodes';\nimport { store as blocksStore } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport { getCommonDepthClientIds } from './utils';\n\nexport default function useBlockSelection() {\n\tconst { clearSelectedBlock, multiSelect, selectBlock } =\n\t\tuseDispatch( blockEditorStore );\n\tconst {\n\t\tgetBlockName,\n\t\tgetBlockParents,\n\t\tgetBlockSelectionStart,\n\t\tgetSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\thasSelectedBlock,\n\t} = useSelect( blockEditorStore );\n\n\tconst { getBlockType } = useSelect( blocksStore );\n\n\tconst updateBlockSelection = useCallback(\n\t\tasync ( event, clientId, destinationClientId, focusPosition ) => {\n\t\t\tif ( ! event?.shiftKey ) {\n\t\t\t\tselectBlock( clientId, focusPosition );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// To handle multiple block selection via the `SHIFT` key, prevent\n\t\t\t// the browser default behavior of opening the link in a new window.\n\t\t\tevent.preventDefault();\n\n\t\t\tconst isKeyPress =\n\t\t\t\tevent.type === 'keydown' &&\n\t\t\t\t( event.keyCode === UP ||\n\t\t\t\t\tevent.keyCode === DOWN ||\n\t\t\t\t\tevent.keyCode === HOME ||\n\t\t\t\t\tevent.keyCode === END );\n\n\t\t\t// Handle clicking on a block when no blocks are selected, and return early.\n\t\t\tif (\n\t\t\t\t! isKeyPress &&\n\t\t\t\t! hasSelectedBlock() &&\n\t\t\t\t! hasMultiSelection()\n\t\t\t) {\n\t\t\t\tselectBlock( clientId, null );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectedBlocks = getSelectedBlockClientIds();\n\t\t\tconst clientIdWithParents = [\n\t\t\t\t...getBlockParents( clientId ),\n\t\t\t\tclientId,\n\t\t\t];\n\n\t\t\tif (\n\t\t\t\tisKeyPress &&\n\t\t\t\t! selectedBlocks.some( ( blockId ) =>\n\t\t\t\t\tclientIdWithParents.includes( blockId )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Ensure that shift-selecting blocks via the keyboard only\n\t\t\t\t// expands the current selection if focusing over already\n\t\t\t\t// selected blocks. Otherwise, clear the selection so that\n\t\t\t\t// a user can create a new selection entirely by keyboard.\n\t\t\t\tawait clearSelectedBlock();\n\t\t\t}\n\n\t\t\tlet startTarget = getBlockSelectionStart();\n\t\t\tlet endTarget = clientId;\n\n\t\t\t// Handle keyboard behavior for selecting multiple blocks.\n\t\t\tif ( isKeyPress ) {\n\t\t\t\tif ( ! hasSelectedBlock() && ! hasMultiSelection() ) {\n\t\t\t\t\t// Set the starting point of the selection to the currently\n\t\t\t\t\t// focused block, if there are no blocks currently selected.\n\t\t\t\t\t// This ensures that as the selection is expanded or contracted,\n\t\t\t\t\t// the starting point of the selection is anchored to that block.\n\t\t\t\t\tstartTarget = clientId;\n\t\t\t\t}\n\t\t\t\tif ( destinationClientId ) {\n\t\t\t\t\t// If the user presses UP or DOWN, we want to ensure that the block they're\n\t\t\t\t\t// moving to is the target for selection, and not the currently focused one.\n\t\t\t\t\tendTarget = destinationClientId;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst startParents = getBlockParents( startTarget );\n\t\t\tconst endParents = getBlockParents( endTarget );\n\n\t\t\tconst { start, end } = getCommonDepthClientIds(\n\t\t\t\tstartTarget,\n\t\t\t\tendTarget,\n\t\t\t\tstartParents,\n\t\t\t\tendParents\n\t\t\t);\n\t\t\tawait multiSelect( start, end, null );\n\n\t\t\t// Announce deselected block, or number of deselected blocks if\n\t\t\t// the total number of blocks deselected is greater than one.\n\t\t\tconst updatedSelectedBlocks = getSelectedBlockClientIds();\n\n\t\t\t// If the selection is greater than 1 and the Home or End keys\n\t\t\t// were used to generate the selection, then skip announcing the\n\t\t\t// deselected blocks.\n\t\t\tif (\n\t\t\t\t( event.keyCode === HOME || event.keyCode === END ) &&\n\t\t\t\tupdatedSelectedBlocks.length > 1\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectionDiff = selectedBlocks.filter(\n\t\t\t\t( blockId ) => ! updatedSelectedBlocks.includes( blockId )\n\t\t\t);\n\n\t\t\tlet label;\n\t\t\tif ( selectionDiff.length === 1 ) {\n\t\t\t\tconst title = getBlockType(\n\t\t\t\t\tgetBlockName( selectionDiff[ 0 ] )\n\t\t\t\t)?.title;\n\t\t\t\tif ( title ) {\n\t\t\t\t\tlabel = sprintf(\n\t\t\t\t\t\t/* translators: %s: block name */\n\t\t\t\t\t\t__( '%s deselected.' ),\n\t\t\t\t\t\ttitle\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if ( selectionDiff.length > 1 ) {\n\t\t\t\tlabel = sprintf(\n\t\t\t\t\t/* translators: %s: number of deselected blocks */\n\t\t\t\t\t__( '%s blocks deselected.' ),\n\t\t\t\t\tselectionDiff.length\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( label ) {\n\t\t\t\tspeak( label, 'assertive' );\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tclearSelectedBlock,\n\t\t\tgetBlockName,\n\t\t\tgetBlockType,\n\t\t\tgetBlockParents,\n\t\t\tgetBlockSelectionStart,\n\t\t\tgetSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t\thasSelectedBlock,\n\t\t\tmultiSelect,\n\t\t\tselectBlock,\n\t\t]\n\t);\n\n\treturn {\n\t\tupdateBlockSelection,\n\t};\n}\n"],"mappings":"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"}